<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Jason Yang: Math and Computer Science Notes</title>
    <link href="https://userjy.github.io/atom.xml" rel="self" />
    <link href="https://userjy.github.io" />
    <id>https://userjy.github.io/atom.xml</id>
    <author>
        <name>Jason Yang</name>
        <email>jasonyang299@gmail.com</email>
    </author>
    <updated>2022-10-02T00:00:00Z</updated>
    <entry>
    <title>Quick AWS SQS SNS</title>
    <link href="https://userjy.github.io/posts/2022-10-02-SQS.html" />
    <id>https://userjy.github.io/posts/2022-10-02-SQS.html</id>
    <published>2022-10-02T00:00:00Z</published>
    <updated>2022-10-02T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October  2, 2022
    
</div>
<div class="info">
    
    Tags: <a title="All pages tagged &#39;prog&#39;." href="/tags/prog.html">prog</a>, <a title="All pages tagged &#39;cloud&#39;." href="/tags/cloud.html">cloud</a>, <a title="All pages tagged &#39;aws&#39;." href="/tags/aws.html">aws</a>
    
</div>
<section id="broad-summary" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Broad Summary</h1>
<ul>
<li>SQS: ONE-TO-ONE bridge between lambda + service/db/s3
<ul>
<li>Just throw it in front of everything if cost allows</li>
</ul></li>
<li>SNS: FANOUT pubsub</li>
</ul>
</section>
<section id="sqs" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> SQS</h1>
<ul>
<li>SQS
<ul>
<li>Functionality
<ul>
<li>lambda poll Queue: by configuring SQS lambda trigger</li>
<li>lambda push Queue: using boto3</li>
</ul></li>
<li>Options
<ul>
<li>unOrdered Queue</li>
<li>FIFO Queue</li>
</ul></li>
</ul></li>
</ul>
<p>Max message size is 256 KB<br />
Typically middlemans one-to-one, NOT FANOUT</p>
<section id="mechanism" class="level2" data-number="2.1">
<h2 data-number="2.1"><span class="header-section-number">2.1</span> Mechanism</h2>
<ol type="1">
<li>Producer Send Msg to SQS</li>
<li>SQS Send Msg to Consumer</li>
<li>Consumer initiate Polling
4a. Consumer Process Msg
4b. Consumer Delete Msg</li>
</ol>
<p>Message Details:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="ex">ID</span>                              Size      MD5 of message body</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="ex">ABC-CDE-FE32-EG12-ZZZZZZZZZZ</span>    9 bytes   4901d08f14cacf11650dadaac7e22067</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="ex">Sender</span> account ID     Sent                      First received</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="ex">ABCDEFFFFFFFFFFFFFFF</span>  7/8/2022, 12:26:26 EDT    7/8/2022, 12:26:50 EDT</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="ex">Receive</span> count   Message attributes count  Message attributes size   MD5 of message attributes</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="ex">2</span>               <span class="at">-</span>                         <span class="at">-</span>                         <span class="at">-</span></span></code></pre></div>
<ul>
<li>Note that it is possible to poll for message but not delete it. This will make the *Receive count” go up.</li>
</ul>
</section>
<section id="common-pattern" class="level2" data-number="2.2">
<h2 data-number="2.2"><span class="header-section-number">2.2</span> Common pattern</h2>
<ul>
<li>A very common pattern is throwing SQS infront of a lambda or db or microservice.(really just throw it in front of anything important)
<ul>
<li>Retrys if fail</li>
<li>If message processing lambda needs to be taken down for service, means messages can be left in queue to be later processed.</li>
<li>Loosen tight dependencies by giving an agnostic message queue between services</li>
</ul></li>
</ul>
</section>
<section id="examples" class="level2" data-number="2.3">
<h2 data-number="2.3"><span class="header-section-number">2.3</span> Examples</h2>
<section id="ex1" class="level3" data-number="2.3.1">
<h3 data-number="2.3.1"><span class="header-section-number">2.3.1</span> Ex1</h3>
<div class="sourceCode" id="cb2"><pre class="sourceCode python"><code class="sourceCode python"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> json</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> boto3 </span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> lambda_handler(event, context):</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="co"># </span><span class="al">TODO</span><span class="co"> implement</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    sqs <span class="op">=</span> boto3.client(<span class="st">&#39;sqs&#39;</span>)</span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>    sqs.send_message(</span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>        QueueUrl <span class="op">=</span> <span class="st">&quot;https://sqs.us-east-1.amazonaws.com/637189393063/myqueue&quot;</span>,</span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>        MessageBody <span class="op">=</span> <span class="st">&quot;hi&quot;</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>        )</span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> {</span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>        <span class="st">&#39;statusCode&#39;</span>: <span class="dv">200</span>,</span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>        <span class="st">&#39;body&#39;</span>: json.dumps(<span class="st">&#39;Hello from Lambda!&#39;</span>)</span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>    }</span></code></pre></div>
</section>
</section>
</section>
<section id="counter-example-sqs-vs-sns" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Counter example: SQS vs SNS</h1>
<ul>
<li>Imagine client order message needs to be processed by Accounting Service AND Analytic Service
<ul>
<li>SQS :(BAD) Only one (Either Accounting or Analytic Service ) wins out and takes the message</li>
<li>SNS :(GOOD) Both service sub to the topic and can process the message</li>
</ul></li>
</ul>
<section id="usecase" class="level2" data-number="3.1">
<h2 data-number="3.1"><span class="header-section-number">3.1</span> Usecase</h2>
<p>REMEMBER: How you throw SQS in-front of anything important?</p>
<ul>
<li>SQS-SNS fanout pattern
<ul>
<li>SNS is typically used in conjunction with SQS</li>
<li>SQS fans out to multiple SNS queues infront of individual microservices
<ul>
<li>This way when one microservice goes down, data isn’t lost and instead kept in queue</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
]]></summary>
</entry>
<entry>
    <title>Quick TerraForm</title>
    <link href="https://userjy.github.io/posts/2022-10-02-QuickTerraForm.html" />
    <id>https://userjy.github.io/posts/2022-10-02-QuickTerraForm.html</id>
    <published>2022-10-02T00:00:00Z</published>
    <updated>2022-10-02T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October  2, 2022
    
</div>
<div class="info">
    
    Tags: <a title="All pages tagged &#39;prog&#39;." href="/tags/prog.html">prog</a>, <a title="All pages tagged &#39;cloud&#39;." href="/tags/cloud.html">cloud</a>, <a title="All pages tagged &#39;Terraform&#39;." href="/tags/Terraform.html">Terraform</a>, <a title="All pages tagged &#39;DevOps&#39;." href="/tags/DevOps.html">DevOps</a>, <a title="All pages tagged &#39;aws&#39;." href="/tags/aws.html">aws</a>
    
</div>
<p>TerraForm is declarative, apply is idempotent</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode yml"><code class="sourceCode yaml"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="at">terraform {</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="at">    required_providers {</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="at">        aws = {</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="at">            source = &quot;hashicorp/aws&quot;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a><span class="at">            version = &quot;~&gt; 3.0&quot;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="at">        }</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="at">    }</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="at">}</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a><span class="at">provider &quot;aws&quot; {</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a><span class="at">    region = &quot;us-east-1&quot;</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a><span class="at">}</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a><span class="at">resource &quot;aws_instance&quot; &quot;example&quot; {</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a><span class="at">    ami = &quot;ami-05fa00d4c63e32376&quot;</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a><span class="at">    instance_type = &quot;t2.micro&quot;</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a><span class="at">}</span></span></code></pre></div>
<div class="sourceCode" id="cb2"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="ex">terraform</span> init <span class="co">#downloads the terraform modules</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="ex">terraform</span> plan <span class="co">#query aws API and see what will be deployed and its settings</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="ex">terraform</span> apply <span class="co">#starts the instance in aws</span></span></code></pre></div>
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="ex">terraform</span> destroy</span></code></pre></div>
<section id="keywords" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> keywords</h1>
<ul>
<li><code>resource "aws_instance" "example"</code> : creates a aws_instance if not exist</li>
<li><code>data "aws_vpc" "default_vpc"</code> : refers to pre-existing aws_vpc</li>
</ul>
</section>
<section id="theory" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Theory</h1>
<ul>
<li>State file : has all the secrets and
<ul>
<li>can keep it in s3</li>
</ul></li>
</ul>
<div class="sourceCode" id="cb4"><pre class="sourceCode .txt"><code class="sourceCode default"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a>├── main.tf</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>├── .terraform</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>│   └── providers</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>│       └── registry.terraform.io</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>│           └── hashicorp</span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>│               └── aws</span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>│                   └── 3.75.2</span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>│                       └── linux_amd64</span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>│                           └── terraform-provider-aws_v3.75.2_x5</span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>├── .terraform.lock.hcl</span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>├── terraform.tfstate</span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>└── terraform.tfstate.backup</span></code></pre></div>
</section>
]]></summary>
</entry>
<entry>
    <title>Quick AWS 2 - S3</title>
    <link href="https://userjy.github.io/posts/2022-10-02-QuickAWS2.html" />
    <id>https://userjy.github.io/posts/2022-10-02-QuickAWS2.html</id>
    <published>2022-10-02T00:00:00Z</published>
    <updated>2022-10-02T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October  2, 2022
    
</div>
<div class="info">
    
    Tags: <a title="All pages tagged &#39;prog&#39;." href="/tags/prog.html">prog</a>, <a title="All pages tagged &#39;cloud&#39;." href="/tags/cloud.html">cloud</a>, <a title="All pages tagged &#39;aws&#39;." href="/tags/aws.html">aws</a>
    
</div>
<ul>
<li>Files are Objects which are grouped as Buckets</li>
<li>Bucket Objects can be <code>index.html</code> <code>lib.js</code> etc allowing static site hosting.
<ul>
<li>Select “testBucket” &gt;&gt; Properties &gt;&gt; Static webwite Hosting</li>
</ul></li>
</ul>
<section id="security" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Security</h1>
<ol type="1">
<li>Bucket Settings (Block all request default)</li>
<li>Bucket Policy (None by default)</li>
</ol>
<section id="bucket-policy" class="level2" data-number="1.1">
<h2 data-number="1.1"><span class="header-section-number">1.1</span> Bucket Policy</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode yaml"><code class="sourceCode yaml"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">{</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">&quot;Version&quot;</span><span class="kw">:</span><span class="at"> </span><span class="st">&quot;2012-10-17&quot;</span><span class="kw">,</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="fu">&quot;Statement&quot;</span><span class="kw">:</span><span class="at"> </span><span class="kw">[</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="kw">{</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="at">            </span><span class="fu">&quot;Sid&quot;</span><span class="kw">:</span><span class="at"> </span><span class="st">&quot;Statement1&quot;</span><span class="kw">,</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a><span class="at">            </span><span class="fu">&quot;Effect&quot;</span><span class="kw">:</span><span class="at"> </span><span class="st">&quot;Allow&quot;</span><span class="kw">,</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="at">            </span><span class="fu">&quot;Principal&quot;</span><span class="kw">:</span><span class="at"> </span><span class="st">&quot;*&quot;</span><span class="kw">,</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="at">            </span><span class="fu">&quot;Action&quot;</span><span class="kw">:</span><span class="at"> </span><span class="st">&quot;s3:GetObject&quot;</span><span class="kw">,</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="at">            </span><span class="fu">&quot;Resource&quot;</span><span class="kw">:</span><span class="at"> </span><span class="st">&quot;arn:aws:s3:::testsitenew/*&quot;</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a><span class="at">        </span><span class="kw">}</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a><span class="at">    </span><span class="kw">]</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a><span class="kw">}</span></span></code></pre></div>
<ul>
<li>Principal is who this rule applies to, Root, Users, etc..</li>
<li>Resource is <code>arn:aws:s3:::{BUCKET}/{OBJECT}</code></li>
</ul>
<p><img src="/images/3r9f38_chartAWSitems.png" /></p>
</section>
</section>
]]></summary>
</entry>
<entry>
    <title>Quick AWS</title>
    <link href="https://userjy.github.io/posts/2022-10-02-QuickAWS.html" />
    <id>https://userjy.github.io/posts/2022-10-02-QuickAWS.html</id>
    <published>2022-10-02T00:00:00Z</published>
    <updated>2022-10-02T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October  2, 2022
    
</div>
<div class="info">
    
    Tags: <a title="All pages tagged &#39;prog&#39;." href="/tags/prog.html">prog</a>, <a title="All pages tagged &#39;cloud&#39;." href="/tags/cloud.html">cloud</a>, <a title="All pages tagged &#39;aws&#39;." href="/tags/aws.html">aws</a>
    
</div>
<figure><img src='http://www.plantuml.com/plantuml/svg/~h407374617274756d6c0a7363616c65203735302077696474680a736b696e706172616d20736861646f77696e672066616c73650a0a6672616d6520565043207b0a6672616d6520225553204561737420284f68696f2922206173206631203c3c417661696c6162696c697479205a6f6e653e3e207b0a20206f626a65637420224e6574776f726b41434c22206173204e41310a20206f626a65637420224e6574776f726b41434c22206173204e41320a20206672616d652022707269766174655375626e65742220617320505031207b0a202020206f626a6563742022454332222061732041310a20207d0a20206672616d6520227075626c69635375626e65742220617320505032207b0a202020206f626a6563742022454332222061732041320a20207d200a20204e4131202d2d3e205050310a20204e4132202d2d3e205050320a7d0a0a6672616d65202255532057657374202843616c692922206173206632203c3c417661696c6162696c697479205a6f6e653e3e207b0a20206f626a65637420224e6574776f726b41434c22206173204e41330a20206f626a65637420224e6574776f726b41434c22206173204e41340a20206672616d652022707269766174655375626e65742220617320505033207b0a202020206f626a6563742022454332222061732042310a20207d0a20206672616d6520227075626c69635375626e65742220617320505034207b0a202020206f626a6563742022454332222061732042320a20207d200a20204e4133202d2d3e205050330a20204e4134202d2d3e205050340a7d0a0a0a6f626a65637420726f757465720a726f75746572202d2d6f2066310a726f75746572202d2d6f2066320a0a7d0a40656e64756d6c'></figure>
<ul>
<li>region eg. North Virginia (us-east-1)
<ul>
<li>Availability Zones eg. { us-east-1a, us-east-1b…}
<ul>
<li>Each Zone is a different data center</li>
<li>Each Zone hosts at least 1 subnet</li>
</ul></li>
<li>Typically all Zones use the same Route-Table, Network ACL</li>
</ul></li>
</ul>
<section id="setup" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Setup</h1>
<section id="download-cli" class="level2" data-number="1.1">
<h2 data-number="1.1"><span class="header-section-number">1.1</span> Download CLI</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="fu">mkdir</span> awstmp</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="ex">curl</span> <span class="st">&quot;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&quot;</span> <span class="at">-o</span> <span class="st">&quot;awscliv2.zip&quot;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="fu">unzip</span> awscliv2.zip</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="fu">sudo</span> ./awstmp/aws/install</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="co">#You can now run: /usr/local/bin/aws --version</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a><span class="ex">aws</span> <span class="at">--version</span></span></code></pre></div>
</section>
<section id="create-administrator-account" class="level2" data-number="1.2">
<h2 data-number="1.2"><span class="header-section-number">1.2</span> Create Administrator account</h2>
<ol type="1">
<li>check both boxes, programmatic access and web console browser access</li>
<li>Add User “Administrator” with your custom password</li>
<li>Make new group, “Administrator”</li>
<li>Filter, add “AdministratorAccess” check</li>
<li>Finish adding user, final page will show
<ul>
<li>IAM id</li>
<li>Username</li>
<li>Access key ID: AKIAIOSFODNN7EXAMPLE</li>
<li>Secret access key: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</li>
</ul></li>
</ol>
<p>IAM id, Username and your custom password is used to logon browser.<br />
Access key and Secret access key is used for code.</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="ex">aws</span> configure</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="ex">AWS</span> Access Key ID [None]: your_access_key_id</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="ex">AWS</span> Secret Access Key [None]: your_secret_access_key</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="ex">Default</span> region name [None]: </span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="ex">Default</span> output format [None]:</span></code></pre></div>
</section>
<section id="download-sam" class="level2" data-number="1.3">
<h2 data-number="1.3"><span class="header-section-number">1.3</span> Download SAM</h2>
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="fu">mkdir</span> SAMtmp</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="fu">wget</span> https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="fu">unzip</span> aws-sam-cli-linux-x86_64.zip</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="fu">sudo</span> ./install</span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="ex">sam</span> <span class="at">--version</span></span></code></pre></div>
<section id="upgrade-sam" class="level3" data-number="1.3.1">
<h3 data-number="1.3.1"><span class="header-section-number">1.3.1</span> Upgrade SAM</h3>
<div class="sourceCode" id="cb4"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="fu">mkdir</span> SAMtmp</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="fu">wget</span> https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="fu">unzip</span> aws-sam-cli-linux-x86_64.zip</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="fu">sudo</span> ./install <span class="at">--update</span> <span class="co">##THIS IS THE ONLY DIFF from regular install</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="ex">sam</span> <span class="at">--version</span></span></code></pre></div>
<ul>
<li>Note SAM autodetects aws profile if you setup the aws cli</li>
</ul>
</section>
</section>
</section>
<section id="sam" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> SAM</h1>
<p>Common theme whether remote or local, we build the container locally.<br />
Next step we can either call the local lambda or deploy it to AWS cloud.</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="ex">sam</span> build <span class="at">--use-container</span></span></code></pre></div>
<section id="local-lambda-call" class="level2" data-number="2.1">
<h2 data-number="2.1"><span class="header-section-number">2.1</span> Local lambda call</h2>
<ul>
<li>this emulate the aws cloud env locally as a docker</li>
</ul>
<div class="sourceCode" id="cb6"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="co">#local lambda invoke</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="ex">sam</span> local invoke <span class="st">&quot;HelloWorldFunction&quot;</span> <span class="at">-e</span> events/event.json</span></code></pre></div>
</section>
<section id="real-aws-cloud-deploy" class="level2" data-number="2.2">
<h2 data-number="2.2"><span class="header-section-number">2.2</span> Real AWS cloud deploy</h2>
<div class="sourceCode" id="cb7"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="co">#real lambda deploy</span></span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="ex">sam</span> deploy <span class="at">--guided</span></span></code></pre></div>
</section>
</section>
]]></summary>
</entry>
<entry>
    <title>Quick AWS Achitecture</title>
    <link href="https://userjy.github.io/posts/2022-10-02-Architecture.html" />
    <id>https://userjy.github.io/posts/2022-10-02-Architecture.html</id>
    <published>2022-10-02T00:00:00Z</published>
    <updated>2022-10-02T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October  2, 2022
    
</div>
<div class="info">
    
    Tags: <a title="All pages tagged &#39;prog&#39;." href="/tags/prog.html">prog</a>, <a title="All pages tagged &#39;cloud&#39;." href="/tags/cloud.html">cloud</a>, <a title="All pages tagged &#39;aws&#39;." href="/tags/aws.html">aws</a>
    
</div>
<section id="service-tiers" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Service tiers</h1>
<ul>
<li>Tier 1 - Most important , Customer DBs</li>
<li>Tier 2 - Still important</li>
<li>Tier 3 - Not important , Data analytics</li>
</ul>
<p>A Tier 3 serverless lambda should never be talking directly to a Tier 1 Customer DynamoDB.<br />
How do we resolve this cross-tier talking? With a Message Queue like SQS.<br />
A lambda should poll the queue, either one-by-one message or batch process multiple(cheaper)</p>
</section>
]]></summary>
</entry>
<entry>
    <title>Appsync VTL JS Pipeline Resolvers</title>
    <link href="https://userjy.github.io/posts/2022-10-02-AppSyncResolver.html" />
    <id>https://userjy.github.io/posts/2022-10-02-AppSyncResolver.html</id>
    <published>2022-10-02T00:00:00Z</published>
    <updated>2022-10-02T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October  2, 2022
    
</div>
<div class="info">
    
    Tags: <a title="All pages tagged &#39;prog&#39;." href="/tags/prog.html">prog</a>, <a title="All pages tagged &#39;cloud&#39;." href="/tags/cloud.html">cloud</a>, <a title="All pages tagged &#39;aws&#39;." href="/tags/aws.html">aws</a>
    
</div>
<section id="summary" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Summary</h1>
<div class="sourceCode" id="cb1"><pre class="sourceCode .txt"><code class="sourceCode default"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>PipelineResolverStart() ==&gt; funcA(ctx) ==&gt; funcB(ctx) ==&gt; funcC(ctx) ==&gt; PipelineResolverEnd(ctx)</span></code></pre></div>
<ul>
<li>Pipeline resolver functions(PipelineResolverStart,PipelineResolverEnd) wrap a chain of composable request/response functions (funcA,funcB,funcC).
<ul>
<li><code>funcA(ctx)</code> can access <code>PipelineResolverStart()</code> output with <code>ctx.prev.result</code></li>
<li><code>funcB(ctx)</code> can access <code>funcB</code> output with <code>ctx.prev.result</code></li>
<li><code>PipelineResolverEnd(ctx)</code> can access <code>funcC</code> output with <code>ctx.prev.result</code></li>
</ul></li>
</ul>
<p>WARN: Despite know that ALL functions in the chain have access to the graphql input with <code>ctx.arguments</code></p>
</section>
<section id="ctx-object" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> ctx object</h1>
<ul>
<li><code>ctx.stash</code> is like golang context or react useContext hook</li>
<li><code>util.error</code> used to throw an error and stop the chain of functions</li>
<li><code>util.appendError</code> used to throw an error without stopping the chain of functions</li>
</ul>
</section>
<section id="vtl-vs-js" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> VTL vs JS</h1>
<p><a href="https://docs.aws.amazon.com/appsync/latest/devguide/resolver-reference-overview-js.html">https://docs.aws.amazon.com/appsync/latest/devguide/resolver-reference-overview-js.html</a></p>
<div class="sourceCode" id="cb2"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>## [Start] Mutation Update resolver<span class="op">.</span> <span class="op">**</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>#<span class="fu">set</span>( $args <span class="op">=</span> $util<span class="op">.</span><span class="fu">defaultIfNull</span>($ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">transformedArgs</span><span class="op">,</span> $ctx<span class="op">.</span><span class="at">args</span>) )</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>## <span class="bu">Set</span> the <span class="im">default</span> values to put request <span class="op">**</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>#<span class="fu">set</span>( $mergedValues <span class="op">=</span> $util<span class="op">.</span><span class="fu">defaultIfNull</span>($ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">defaultValues</span><span class="op">,</span> {}) )</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>## copy the values <span class="im">from</span> input <span class="op">**</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>$util<span class="op">.</span><span class="fu">qr</span>($mergedValues<span class="op">.</span><span class="fu">putAll</span>($util<span class="op">.</span><span class="fu">defaultIfNull</span>($args<span class="op">.</span><span class="at">input</span><span class="op">,</span> {})))</span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>## set the typename <span class="op">**</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>## Initialize the vars <span class="cf">for</span> creating ddb expression <span class="op">**</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>#<span class="fu">set</span>( $expNames <span class="op">=</span> {} )</span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>#<span class="fu">set</span>( $expValues <span class="op">=</span> {} )</span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>#<span class="fu">set</span>( $expSet <span class="op">=</span> {} )</span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>#<span class="fu">set</span>( $expAdd <span class="op">=</span> {} )</span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>#<span class="fu">set</span>( $expRemove <span class="op">=</span> [] )</span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>#<span class="fu">if</span>( $ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">metadata</span><span class="op">.</span><span class="at">modelObjectKey</span> )</span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">set</span>( $Key <span class="op">=</span> $ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">metadata</span><span class="op">.</span><span class="at">modelObjectKey</span> )</span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>#else</span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">set</span>( $Key <span class="op">=</span> {</span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;id&quot;</span><span class="op">:</span>   $util<span class="op">.</span><span class="at">dynamodb</span><span class="op">.</span><span class="fu">toDynamoDB</span>($args<span class="op">.</span><span class="at">input</span><span class="op">.</span><span class="at">id</span>)</span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>} )</span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a>#end</span>
<span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>## Model key <span class="op">**</span></span>
<span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a>#<span class="fu">if</span>( $ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">metadata</span><span class="op">.</span><span class="at">modelObjectKey</span> )</span>
<span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">set</span>( $keyFields <span class="op">=</span> [<span class="st">&quot;_version&quot;</span><span class="op">,</span> <span class="st">&quot;_deleted&quot;</span><span class="op">,</span> <span class="st">&quot;_lastChangedAt&quot;</span>] )</span>
<span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">foreach</span>( $entry <span class="kw">in</span> $ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">metadata</span><span class="op">.</span><span class="at">modelObjectKey</span><span class="op">.</span><span class="fu">entrySet</span>() )</span>
<span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a>    $util<span class="op">.</span><span class="fu">qr</span>($keyFields<span class="op">.</span><span class="fu">add</span>(<span class="st">&quot;$entry.key&quot;</span>))</span>
<span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a>  #end</span>
<span id="cb2-27"><a href="#cb2-27" aria-hidden="true" tabindex="-1"></a>#else</span>
<span id="cb2-28"><a href="#cb2-28" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">set</span>( $keyFields <span class="op">=</span> [<span class="st">&quot;id&quot;</span><span class="op">,</span> <span class="st">&quot;_version&quot;</span><span class="op">,</span> <span class="st">&quot;_deleted&quot;</span><span class="op">,</span> <span class="st">&quot;_lastChangedAt&quot;</span>] )</span>
<span id="cb2-29"><a href="#cb2-29" aria-hidden="true" tabindex="-1"></a>#end</span>
<span id="cb2-30"><a href="#cb2-30" aria-hidden="true" tabindex="-1"></a>#<span class="fu">foreach</span>( $entry <span class="kw">in</span> $util<span class="op">.</span><span class="at">map</span><span class="op">.</span><span class="fu">copyAndRemoveAllKeys</span>($mergedValues<span class="op">,</span> $keyFields)<span class="op">.</span><span class="fu">entrySet</span>() )</span>
<span id="cb2-31"><a href="#cb2-31" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">if</span>( <span class="op">!</span>$util<span class="op">.</span><span class="fu">isNull</span>($ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">metadata</span><span class="op">.</span><span class="at">dynamodbNameOverrideMap</span>) <span class="op">&amp;&amp;</span> $ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">metadata</span><span class="op">.</span><span class="at">dynamodbNameOverrideMap</span><span class="op">.</span><span class="fu">containsKey</span>(<span class="st">&quot;$entry.key&quot;</span>) )</span>
<span id="cb2-32"><a href="#cb2-32" aria-hidden="true" tabindex="-1"></a>    #<span class="fu">set</span>( $entryKeyAttributeName <span class="op">=</span> $ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">metadata</span><span class="op">.</span><span class="at">dynamodbNameOverrideMap</span><span class="op">.</span><span class="fu">get</span>(<span class="st">&quot;$entry.key&quot;</span>) )</span>
<span id="cb2-33"><a href="#cb2-33" aria-hidden="true" tabindex="-1"></a>  #else</span>
<span id="cb2-34"><a href="#cb2-34" aria-hidden="true" tabindex="-1"></a>    #<span class="fu">set</span>( $entryKeyAttributeName <span class="op">=</span> $entry<span class="op">.</span><span class="at">key</span> )</span>
<span id="cb2-35"><a href="#cb2-35" aria-hidden="true" tabindex="-1"></a>  #end</span>
<span id="cb2-36"><a href="#cb2-36" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">if</span>( $util<span class="op">.</span><span class="fu">isNull</span>($entry<span class="op">.</span><span class="at">value</span>) )</span>
<span id="cb2-37"><a href="#cb2-37" aria-hidden="true" tabindex="-1"></a>    #<span class="fu">set</span>( $discard <span class="op">=</span> $expRemove<span class="op">.</span><span class="fu">add</span>(<span class="st">&quot;#$entryKeyAttributeName&quot;</span>) )</span>
<span id="cb2-38"><a href="#cb2-38" aria-hidden="true" tabindex="-1"></a>    $util<span class="op">.</span><span class="fu">qr</span>($expNames<span class="op">.</span><span class="fu">put</span>(<span class="st">&quot;#$entryKeyAttributeName&quot;</span><span class="op">,</span> <span class="st">&quot;$entry.key&quot;</span>))</span>
<span id="cb2-39"><a href="#cb2-39" aria-hidden="true" tabindex="-1"></a>  #else</span>
<span id="cb2-40"><a href="#cb2-40" aria-hidden="true" tabindex="-1"></a>    $util<span class="op">.</span><span class="fu">qr</span>($expSet<span class="op">.</span><span class="fu">put</span>(<span class="st">&quot;#$entryKeyAttributeName&quot;</span><span class="op">,</span> <span class="st">&quot;:$entryKeyAttributeName&quot;</span>))</span>
<span id="cb2-41"><a href="#cb2-41" aria-hidden="true" tabindex="-1"></a>    $util<span class="op">.</span><span class="fu">qr</span>($expNames<span class="op">.</span><span class="fu">put</span>(<span class="st">&quot;#$entryKeyAttributeName&quot;</span><span class="op">,</span> <span class="st">&quot;$entry.key&quot;</span>))</span>
<span id="cb2-42"><a href="#cb2-42" aria-hidden="true" tabindex="-1"></a>    $util<span class="op">.</span><span class="fu">qr</span>($expValues<span class="op">.</span><span class="fu">put</span>(<span class="st">&quot;:$entryKeyAttributeName&quot;</span><span class="op">,</span> $util<span class="op">.</span><span class="at">dynamodb</span><span class="op">.</span><span class="fu">toDynamoDB</span>($entry<span class="op">.</span><span class="at">value</span>)))</span>
<span id="cb2-43"><a href="#cb2-43" aria-hidden="true" tabindex="-1"></a>  #end</span>
<span id="cb2-44"><a href="#cb2-44" aria-hidden="true" tabindex="-1"></a>#end</span>
<span id="cb2-45"><a href="#cb2-45" aria-hidden="true" tabindex="-1"></a>#<span class="fu">set</span>( $expression <span class="op">=</span> <span class="st">&quot;&quot;</span> )</span>
<span id="cb2-46"><a href="#cb2-46" aria-hidden="true" tabindex="-1"></a>#<span class="fu">if</span>( <span class="op">!</span>$expSet<span class="op">.</span><span class="fu">isEmpty</span>() )</span>
<span id="cb2-47"><a href="#cb2-47" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">set</span>( $expression <span class="op">=</span> <span class="st">&quot;SET&quot;</span> )</span>
<span id="cb2-48"><a href="#cb2-48" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">foreach</span>( $entry <span class="kw">in</span> $expSet<span class="op">.</span><span class="fu">entrySet</span>() )</span>
<span id="cb2-49"><a href="#cb2-49" aria-hidden="true" tabindex="-1"></a>    #<span class="fu">set</span>( $expression <span class="op">=</span> <span class="st">&quot;$expression $entry.key = $entry.value&quot;</span> )</span>
<span id="cb2-50"><a href="#cb2-50" aria-hidden="true" tabindex="-1"></a>    #<span class="fu">if</span>( $foreach<span class="op">.</span><span class="fu">hasNext</span>() )</span>
<span id="cb2-51"><a href="#cb2-51" aria-hidden="true" tabindex="-1"></a>      #<span class="fu">set</span>( $expression <span class="op">=</span> <span class="st">&quot;$expression,&quot;</span> )</span>
<span id="cb2-52"><a href="#cb2-52" aria-hidden="true" tabindex="-1"></a>    #end</span>
<span id="cb2-53"><a href="#cb2-53" aria-hidden="true" tabindex="-1"></a>  #end</span>
<span id="cb2-54"><a href="#cb2-54" aria-hidden="true" tabindex="-1"></a>#end</span>
<span id="cb2-55"><a href="#cb2-55" aria-hidden="true" tabindex="-1"></a>#<span class="fu">if</span>( <span class="op">!</span>$expAdd<span class="op">.</span><span class="fu">isEmpty</span>() )</span>
<span id="cb2-56"><a href="#cb2-56" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">set</span>( $expression <span class="op">=</span> <span class="st">&quot;$expression ADD&quot;</span> )</span>
<span id="cb2-57"><a href="#cb2-57" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">foreach</span>( $entry <span class="kw">in</span> $expAdd<span class="op">.</span><span class="fu">entrySet</span>() )</span>
<span id="cb2-58"><a href="#cb2-58" aria-hidden="true" tabindex="-1"></a>    #<span class="fu">set</span>( $expression <span class="op">=</span> <span class="st">&quot;$expression $entry.key $entry.value&quot;</span> )</span>
<span id="cb2-59"><a href="#cb2-59" aria-hidden="true" tabindex="-1"></a>    #<span class="fu">if</span>( $foreach<span class="op">.</span><span class="fu">hasNext</span>() )</span>
<span id="cb2-60"><a href="#cb2-60" aria-hidden="true" tabindex="-1"></a>      #<span class="fu">set</span>( $expression <span class="op">=</span> <span class="st">&quot;$expression,&quot;</span> )</span>
<span id="cb2-61"><a href="#cb2-61" aria-hidden="true" tabindex="-1"></a>    #end</span>
<span id="cb2-62"><a href="#cb2-62" aria-hidden="true" tabindex="-1"></a>  #end</span>
<span id="cb2-63"><a href="#cb2-63" aria-hidden="true" tabindex="-1"></a>#end</span>
<span id="cb2-64"><a href="#cb2-64" aria-hidden="true" tabindex="-1"></a>#<span class="fu">if</span>( <span class="op">!</span>$expRemove<span class="op">.</span><span class="fu">isEmpty</span>() )</span>
<span id="cb2-65"><a href="#cb2-65" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">set</span>( $expression <span class="op">=</span> <span class="st">&quot;$expression REMOVE&quot;</span> )</span>
<span id="cb2-66"><a href="#cb2-66" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">foreach</span>( $entry <span class="kw">in</span> $expRemove )</span>
<span id="cb2-67"><a href="#cb2-67" aria-hidden="true" tabindex="-1"></a>    #<span class="fu">set</span>( $expression <span class="op">=</span> <span class="st">&quot;$expression $entry&quot;</span> )</span>
<span id="cb2-68"><a href="#cb2-68" aria-hidden="true" tabindex="-1"></a>    #<span class="fu">if</span>( $foreach<span class="op">.</span><span class="fu">hasNext</span>() )</span>
<span id="cb2-69"><a href="#cb2-69" aria-hidden="true" tabindex="-1"></a>      #<span class="fu">set</span>( $expression <span class="op">=</span> <span class="st">&quot;$expression,&quot;</span> )</span>
<span id="cb2-70"><a href="#cb2-70" aria-hidden="true" tabindex="-1"></a>    #end</span>
<span id="cb2-71"><a href="#cb2-71" aria-hidden="true" tabindex="-1"></a>  #end</span>
<span id="cb2-72"><a href="#cb2-72" aria-hidden="true" tabindex="-1"></a>#end</span>
<span id="cb2-73"><a href="#cb2-73" aria-hidden="true" tabindex="-1"></a>#<span class="fu">set</span>( $update <span class="op">=</span> {} )</span>
<span id="cb2-74"><a href="#cb2-74" aria-hidden="true" tabindex="-1"></a>$util<span class="op">.</span><span class="fu">qr</span>($update<span class="op">.</span><span class="fu">put</span>(<span class="st">&quot;expression&quot;</span><span class="op">,</span> <span class="st">&quot;$expression&quot;</span>))</span>
<span id="cb2-75"><a href="#cb2-75" aria-hidden="true" tabindex="-1"></a>#<span class="fu">if</span>( <span class="op">!</span>$expNames<span class="op">.</span><span class="fu">isEmpty</span>() )</span>
<span id="cb2-76"><a href="#cb2-76" aria-hidden="true" tabindex="-1"></a>  $util<span class="op">.</span><span class="fu">qr</span>($update<span class="op">.</span><span class="fu">put</span>(<span class="st">&quot;expressionNames&quot;</span><span class="op">,</span> $expNames))</span>
<span id="cb2-77"><a href="#cb2-77" aria-hidden="true" tabindex="-1"></a>#end</span>
<span id="cb2-78"><a href="#cb2-78" aria-hidden="true" tabindex="-1"></a>#<span class="fu">if</span>( <span class="op">!</span>$expValues<span class="op">.</span><span class="fu">isEmpty</span>() )</span>
<span id="cb2-79"><a href="#cb2-79" aria-hidden="true" tabindex="-1"></a>  $util<span class="op">.</span><span class="fu">qr</span>($update<span class="op">.</span><span class="fu">put</span>(<span class="st">&quot;expressionValues&quot;</span><span class="op">,</span> $expValues))</span>
<span id="cb2-80"><a href="#cb2-80" aria-hidden="true" tabindex="-1"></a>#end</span>
<span id="cb2-81"><a href="#cb2-81" aria-hidden="true" tabindex="-1"></a>## Begin <span class="op">-</span> key condition <span class="op">**</span></span>
<span id="cb2-82"><a href="#cb2-82" aria-hidden="true" tabindex="-1"></a>#<span class="fu">if</span>( $ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">metadata</span><span class="op">.</span><span class="at">modelObjectKey</span> )</span>
<span id="cb2-83"><a href="#cb2-83" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">set</span>( $keyConditionExpr <span class="op">=</span> {} )</span>
<span id="cb2-84"><a href="#cb2-84" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">set</span>( $keyConditionExprNames <span class="op">=</span> {} )</span>
<span id="cb2-85"><a href="#cb2-85" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">foreach</span>( $entry <span class="kw">in</span> $ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">metadata</span><span class="op">.</span><span class="at">modelObjectKey</span><span class="op">.</span><span class="fu">entrySet</span>() )</span>
<span id="cb2-86"><a href="#cb2-86" aria-hidden="true" tabindex="-1"></a>    $util<span class="op">.</span><span class="fu">qr</span>($keyConditionExpr<span class="op">.</span><span class="fu">put</span>(<span class="st">&quot;keyCondition$velocityCount&quot;</span><span class="op">,</span> {</span>
<span id="cb2-87"><a href="#cb2-87" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;attributeExists&quot;</span><span class="op">:</span> <span class="kw">true</span></span>
<span id="cb2-88"><a href="#cb2-88" aria-hidden="true" tabindex="-1"></a>}))</span>
<span id="cb2-89"><a href="#cb2-89" aria-hidden="true" tabindex="-1"></a>    $util<span class="op">.</span><span class="fu">qr</span>($keyConditionExprNames<span class="op">.</span><span class="fu">put</span>(<span class="st">&quot;#keyCondition$velocityCount&quot;</span><span class="op">,</span> <span class="st">&quot;$entry.key&quot;</span>))</span>
<span id="cb2-90"><a href="#cb2-90" aria-hidden="true" tabindex="-1"></a>  #end</span>
<span id="cb2-91"><a href="#cb2-91" aria-hidden="true" tabindex="-1"></a>  $util<span class="op">.</span><span class="fu">qr</span>($ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">conditions</span><span class="op">.</span><span class="fu">add</span>($keyConditionExpr))</span>
<span id="cb2-92"><a href="#cb2-92" aria-hidden="true" tabindex="-1"></a>#else</span>
<span id="cb2-93"><a href="#cb2-93" aria-hidden="true" tabindex="-1"></a>  $util<span class="op">.</span><span class="fu">qr</span>($ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">conditions</span><span class="op">.</span><span class="fu">add</span>({</span>
<span id="cb2-94"><a href="#cb2-94" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;id&quot;</span><span class="op">:</span> {</span>
<span id="cb2-95"><a href="#cb2-95" aria-hidden="true" tabindex="-1"></a>      <span class="st">&quot;attributeExists&quot;</span><span class="op">:</span> <span class="kw">true</span></span>
<span id="cb2-96"><a href="#cb2-96" aria-hidden="true" tabindex="-1"></a>  }</span>
<span id="cb2-97"><a href="#cb2-97" aria-hidden="true" tabindex="-1"></a>}))</span>
<span id="cb2-98"><a href="#cb2-98" aria-hidden="true" tabindex="-1"></a>#end</span>
<span id="cb2-99"><a href="#cb2-99" aria-hidden="true" tabindex="-1"></a>## End <span class="op">-</span> key condition <span class="op">**</span></span>
<span id="cb2-100"><a href="#cb2-100" aria-hidden="true" tabindex="-1"></a>#<span class="fu">if</span>( $args<span class="op">.</span><span class="at">condition</span> )</span>
<span id="cb2-101"><a href="#cb2-101" aria-hidden="true" tabindex="-1"></a>  $util<span class="op">.</span><span class="fu">qr</span>($ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">conditions</span><span class="op">.</span><span class="fu">add</span>($args<span class="op">.</span><span class="at">condition</span>))</span>
<span id="cb2-102"><a href="#cb2-102" aria-hidden="true" tabindex="-1"></a>#end</span>
<span id="cb2-103"><a href="#cb2-103" aria-hidden="true" tabindex="-1"></a>## Start condition block <span class="op">**</span></span>
<span id="cb2-104"><a href="#cb2-104" aria-hidden="true" tabindex="-1"></a>#<span class="fu">if</span>( $ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">conditions</span> <span class="op">&amp;&amp;</span> $ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">conditions</span><span class="op">.</span><span class="fu">size</span>() <span class="op">!=</span> <span class="dv">0</span> )</span>
<span id="cb2-105"><a href="#cb2-105" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">set</span>( $mergedConditions <span class="op">=</span> {</span>
<span id="cb2-106"><a href="#cb2-106" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;and&quot;</span><span class="op">:</span> $ctx<span class="op">.</span><span class="at">stash</span><span class="op">.</span><span class="at">conditions</span></span>
<span id="cb2-107"><a href="#cb2-107" aria-hidden="true" tabindex="-1"></a>} )</span>
<span id="cb2-108"><a href="#cb2-108" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">set</span>( $Conditions <span class="op">=</span> $util<span class="op">.</span><span class="fu">parseJson</span>($util<span class="op">.</span><span class="at">transform</span><span class="op">.</span><span class="fu">toDynamoDBConditionExpression</span>($mergedConditions)) )</span>
<span id="cb2-109"><a href="#cb2-109" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">if</span>( $Conditions<span class="op">.</span><span class="at">expressionValues</span> <span class="op">&amp;&amp;</span> $Conditions<span class="op">.</span><span class="at">expressionValues</span><span class="op">.</span><span class="fu">size</span>() <span class="op">==</span> <span class="dv">0</span> )</span>
<span id="cb2-110"><a href="#cb2-110" aria-hidden="true" tabindex="-1"></a>    #<span class="fu">set</span>( $Conditions <span class="op">=</span> {</span>
<span id="cb2-111"><a href="#cb2-111" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;expression&quot;</span><span class="op">:</span> $Conditions<span class="op">.</span><span class="at">expression</span><span class="op">,</span></span>
<span id="cb2-112"><a href="#cb2-112" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;expressionNames&quot;</span><span class="op">:</span> $Conditions<span class="op">.</span><span class="at">expressionNames</span></span>
<span id="cb2-113"><a href="#cb2-113" aria-hidden="true" tabindex="-1"></a>} )</span>
<span id="cb2-114"><a href="#cb2-114" aria-hidden="true" tabindex="-1"></a>  #end</span>
<span id="cb2-115"><a href="#cb2-115" aria-hidden="true" tabindex="-1"></a>  ## End condition block <span class="op">**</span></span>
<span id="cb2-116"><a href="#cb2-116" aria-hidden="true" tabindex="-1"></a>#end</span>
<span id="cb2-117"><a href="#cb2-117" aria-hidden="true" tabindex="-1"></a>#<span class="fu">set</span>( $UpdateItem <span class="op">=</span> {</span>
<span id="cb2-118"><a href="#cb2-118" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;version&quot;</span><span class="op">:</span> <span class="st">&quot;2018-05-29&quot;</span><span class="op">,</span></span>
<span id="cb2-119"><a href="#cb2-119" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;operation&quot;</span><span class="op">:</span> <span class="st">&quot;UpdateItem&quot;</span><span class="op">,</span></span>
<span id="cb2-120"><a href="#cb2-120" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;key&quot;</span><span class="op">:</span> $Key<span class="op">,</span></span>
<span id="cb2-121"><a href="#cb2-121" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;update&quot;</span><span class="op">:</span> $update<span class="op">,</span></span>
<span id="cb2-122"><a href="#cb2-122" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;_version&quot;</span><span class="op">:</span> $util<span class="op">.</span><span class="fu">defaultIfNull</span>($args<span class="op">.</span><span class="at">input</span>[<span class="st">&quot;_version&quot;</span>]<span class="op">,</span> <span class="dv">0</span>)</span>
<span id="cb2-123"><a href="#cb2-123" aria-hidden="true" tabindex="-1"></a>} )</span>
<span id="cb2-124"><a href="#cb2-124" aria-hidden="true" tabindex="-1"></a>#<span class="fu">if</span>( $Conditions )</span>
<span id="cb2-125"><a href="#cb2-125" aria-hidden="true" tabindex="-1"></a>  #<span class="fu">if</span>( $keyConditionExprNames )</span>
<span id="cb2-126"><a href="#cb2-126" aria-hidden="true" tabindex="-1"></a>    $util<span class="op">.</span><span class="fu">qr</span>($Conditions<span class="op">.</span><span class="at">expressionNames</span><span class="op">.</span><span class="fu">putAll</span>($keyConditionExprNames))</span>
<span id="cb2-127"><a href="#cb2-127" aria-hidden="true" tabindex="-1"></a>  #end</span>
<span id="cb2-128"><a href="#cb2-128" aria-hidden="true" tabindex="-1"></a>  $util<span class="op">.</span><span class="fu">qr</span>($UpdateItem<span class="op">.</span><span class="fu">put</span>(<span class="st">&quot;condition&quot;</span><span class="op">,</span> $Conditions))</span>
<span id="cb2-129"><a href="#cb2-129" aria-hidden="true" tabindex="-1"></a>#end</span>
<span id="cb2-130"><a href="#cb2-130" aria-hidden="true" tabindex="-1"></a>$util<span class="op">.</span><span class="fu">toJson</span>($UpdateItem)</span>
<span id="cb2-131"><a href="#cb2-131" aria-hidden="true" tabindex="-1"></a>## [End] Mutation Update resolver<span class="op">.</span> <span class="op">**</span></span></code></pre></div>
</section>
<section id="demo" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> demo</h1>
<p>We will be demoing the below graphql schema</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a>type Picture {</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>  <span class="dt">id</span><span class="op">:</span> ID<span class="op">!</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>  <span class="dt">owner</span><span class="op">:</span> ID<span class="op">!</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>  <span class="dt">src</span><span class="op">:</span> <span class="bu">String</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>}</span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>input CreatePictureInput {</span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>  <span class="dt">owner</span><span class="op">:</span> ID<span class="op">!</span> </span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>  <span class="dt">src</span><span class="op">:</span> <span class="bu">String</span></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>}</span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>type Mutation {</span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a>  <span class="fu">createPicture2</span>(<span class="dt">input</span><span class="op">:</span> CreatePictureInput<span class="op">!</span>)<span class="op">:</span> Picture</span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a>  <span class="fu">createPicture3</span>(<span class="dt">input</span><span class="op">:</span> CreatePictureInput<span class="op">!</span>)<span class="op">:</span> Picture</span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<p>using psuedo haskell<br />
<code>createPicture3 :: (id:ID! × src:String) -&gt; (id:ID! × owner:ID! × src:String)</code></p>
<section id="mvp-example" class="level2" data-number="4.1">
<h2 data-number="4.1"><span class="header-section-number">4.1</span> MVP example</h2>
<p>The simplest example to understand how pipeline resolver work.<br />
There are no chain of functions this pipeline resolver wraps.</p>
<div class="sourceCode" id="cb4" data-filename="createPicture3_pipelineResolver"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> {util} <span class="im">from</span> <span class="st">&#39;@aws-appsync/utils&#39;</span><span class="op">;</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="im">export</span> <span class="kw">function</span> <span class="fu">request</span>(ctx) {</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> {<span class="st">&quot;id&quot;</span><span class="op">:</span><span class="dv">3132</span><span class="op">,</span><span class="st">&quot;owner&quot;</span><span class="op">:</span><span class="st">&quot;asas&quot;</span><span class="op">,</span><span class="st">&quot;src&quot;</span><span class="op">:</span><span class="st">&quot;asade&quot;</span>}<span class="op">;</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>}</span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="im">export</span> <span class="kw">function</span> <span class="fu">response</span>(ctx) {</span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> ctx<span class="op">.</span><span class="at">prev</span><span class="op">.</span><span class="at">result</span><span class="op">;</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>    <span class="co">// ctx.prev.result := {&quot;id&quot;:3132,&quot;owner&quot;:&quot;asas&quot;,&quot;src&quot;:&quot;asade&quot;}</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<p><img src="/images/simplestexampleAppsyncResolver.png" /></p>
</section>
<section id="emulating-a-graphql-query-with-test-context" class="level2" data-number="4.2">
<h2 data-number="4.2"><span class="header-section-number">4.2</span> emulating a graphQL query with test context</h2>
<p>Must use Cloudwatch logging to make any use of this.<br />
AppsyncApp &gt;&gt; Settings &gt;&gt; Logging &gt;&gt; Include Verbose content</p>
<ul>
<li>CRITICISM: The test assumes each function is completely independent of the function chain.
<ul>
<li>cannot be used to test an entire chain.</li>
<li>fill in <code>"arguments": {"input": ...}</code> to test <code>request(ctx)</code></li>
<li>fill in <code>"result": {...}</code> to test <code>response(ctx)</code></li>
</ul></li>
</ul>
<div class="sourceCode" id="cb5" data-filename="testcontext"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a>{</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;arguments&quot;</span><span class="op">:</span> {</span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;input&quot;</span><span class="op">:</span> {</span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>      <span class="st">&quot;owner&quot;</span><span class="op">:</span> <span class="st">&quot;bob&quot;</span><span class="op">,</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>      <span class="st">&quot;src&quot;</span><span class="op">:</span> <span class="st">&quot;ross&quot;</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>    }</span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>  }<span class="op">,</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;source&quot;</span><span class="op">:</span> {}<span class="op">,</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;result&quot;</span><span class="op">:</span> {</span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;id&quot;</span><span class="op">:</span><span class="dv">32</span><span class="op">,</span></span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;owner&quot;</span><span class="op">:</span><span class="st">&quot;bill&quot;</span><span class="op">,</span></span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;src&quot;</span><span class="op">:</span><span class="st">&quot;as&quot;</span></span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a>  }<span class="op">,</span></span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;request&quot;</span><span class="op">:</span> {}<span class="op">,</span></span>
<span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;prev&quot;</span><span class="op">:</span> {}</span>
<span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
</section>
</section>
<section id="do-not-fetch-data-source-via-resolver" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> DO NOT FETCH Data Source via Resolver</h1>
<p><strong>DO NOT USE PIPELINE RESOLVER TO FETCH DYNAMODB</strong><br />
Pipeline Resolvers DO NOT have the ability to access Data Sources of anykind.</p>
<ul>
<li>YOU MUST USE A FUNCTION to fetch from a data source, and the UI gives an option to bind to a dynamoDB table.<br />
</li>
<li>The results of DynamoDB fetch gets auto-resolved from DynamoDB datatype syntax like <code>"id": {"S": "person"}</code> =&gt; <code>id : "person"</code></li>
</ul>
<section id="mvp-of-function-autotranslate-dynamodb-query" class="level2" data-number="5.1">
<h2 data-number="5.1"><span class="header-section-number">5.1</span> MVP of function autotranslate DynamoDB query</h2>
<ul>
<li>When a function uses dynamoDB as a query it’s <code>response(ctx)</code> will autotranslate DynamoDB type format into compatible graph query format<br />
<code>"id": {"S": "person"}</code> =&gt; <code>id : "person"</code></li>
</ul>
<div class="sourceCode" id="cb6" data-filename="unitfunction" data-group="ddb123" data-glabel="function"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="co">//remember to select data source as your dynamoDB table</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="co">//we named our function `unit`</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> {util} <span class="im">from</span> <span class="st">&#39;@aws-appsync/utils&#39;</span><span class="op">;</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="im">export</span> <span class="kw">function</span> <span class="fu">request</span>(ctx) {</span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> {<span class="dt">input</span><span class="op">:</span> values} <span class="op">=</span> ctx<span class="op">.</span><span class="at">arguments</span></span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> id <span class="op">=</span> util<span class="op">.</span><span class="fu">autoId</span>()<span class="op">;</span></span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> {</span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;version&quot;</span><span class="op">:</span> <span class="st">&quot;2018-05-29&quot;</span><span class="op">,</span></span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a>        <span class="dt">operation</span><span class="op">:</span> <span class="st">&#39;PutItem&#39;</span><span class="op">,</span></span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a>        <span class="dt">key</span><span class="op">:</span> util<span class="op">.</span><span class="at">dynamodb</span><span class="op">.</span><span class="fu">toMapValues</span>({<span class="st">&quot;id&quot;</span><span class="op">:</span>id})<span class="op">,</span></span>
<span id="cb6-13"><a href="#cb6-13" aria-hidden="true" tabindex="-1"></a>        <span class="dt">attributeValues</span><span class="op">:</span> util<span class="op">.</span><span class="at">dynamodb</span><span class="op">.</span><span class="fu">toMapValues</span>(values)<span class="op">,</span></span>
<span id="cb6-14"><a href="#cb6-14" aria-hidden="true" tabindex="-1"></a>    }<span class="op">;</span></span>
<span id="cb6-15"><a href="#cb6-15" aria-hidden="true" tabindex="-1"></a>}</span>
<span id="cb6-16"><a href="#cb6-16" aria-hidden="true" tabindex="-1"></a><span class="im">export</span> <span class="kw">function</span> <span class="fu">response</span>(ctx) {   </span>
<span id="cb6-17"><a href="#cb6-17" aria-hidden="true" tabindex="-1"></a>     <span class="cf">return</span> ctx<span class="op">.</span><span class="at">result</span></span>
<span id="cb6-18"><a href="#cb6-18" aria-hidden="true" tabindex="-1"></a>     </span>
<span id="cb6-19"><a href="#cb6-19" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<div class="sourceCode" id="cb7" data-filename="pipelineResolver" data-group="ddb123" data-glabel="function"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="co">//notice you dont even get an option to select data source</span></span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="im">export</span> <span class="kw">function</span> <span class="fu">request</span>(ctx) {</span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> {}<span class="op">;</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>}</span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a><span class="im">export</span> <span class="kw">function</span> <span class="fu">response</span>(ctx) {   </span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> ctx<span class="op">.</span><span class="at">prev</span><span class="op">.</span><span class="at">result</span><span class="op">;</span></span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<p>In cloud watch you should see the result below<br />
PipelineResolver =&gt; unit function request =&gt; unit function response =&gt; PipelineResolver</p>
<div class="sourceCode" id="cb8" data-group="clog2254" data-glabel="BeforeRequestFunctionEvaluation"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;logType&quot;</span><span class="op">:</span> <span class="st">&quot;BeforeRequestFunctionEvaluation&quot;</span><span class="op">,</span></span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a><span class="op">...</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;context&quot;</span><span class="op">:</span> {</span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;arguments&quot;</span><span class="op">:</span> {</span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;input&quot;</span><span class="op">:</span> {</span>
<span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a>                <span class="st">&quot;owner&quot;</span><span class="op">:</span> <span class="st">&quot;gv&quot;</span><span class="op">,</span></span>
<span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a>                <span class="st">&quot;src&quot;</span><span class="op">:</span> <span class="st">&quot;vhv&quot;</span></span>
<span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a>            }</span>
<span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a>        }<span class="op">,</span></span>
<span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;stash&quot;</span><span class="op">:</span> {}<span class="op">,</span></span>
<span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;outErrors&quot;</span><span class="op">:</span> []</span>
<span id="cb8-12"><a href="#cb8-12" aria-hidden="true" tabindex="-1"></a>    }<span class="op">,</span></span>
<span id="cb8-13"><a href="#cb8-13" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;fieldInError&quot;</span><span class="op">:</span> <span class="kw">false</span><span class="op">,</span></span>
<span id="cb8-14"><a href="#cb8-14" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;evaluationResult&quot;</span><span class="op">:</span> {}<span class="op">,</span></span>
<span id="cb8-15"><a href="#cb8-15" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;errors&quot;</span><span class="op">:</span> []<span class="op">,</span></span></code></pre></div>
<div class="sourceCode" id="cb9" data-group="clog2254" data-glabel="RequestFunctionEvaluation"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;logType&quot;</span><span class="op">:</span> <span class="st">&quot;RequestFunctionEvaluation&quot;</span><span class="op">,</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;functionName&quot;</span><span class="op">:</span> <span class="st">&quot;unit&quot;</span><span class="op">,</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a><span class="op">...</span></span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;evaluationResult&quot;</span><span class="op">:</span> {</span>
<span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;version&quot;</span><span class="op">:</span> <span class="st">&quot;2018-05-29&quot;</span><span class="op">,</span></span>
<span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;operation&quot;</span><span class="op">:</span> <span class="st">&quot;PutItem&quot;</span><span class="op">,</span></span>
<span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;key&quot;</span><span class="op">:</span> {</span>
<span id="cb9-8"><a href="#cb9-8" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;id&quot;</span><span class="op">:</span> {</span>
<span id="cb9-9"><a href="#cb9-9" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;S&quot;</span><span class="op">:</span> <span class="st">&quot;52216404-ff5b-40b2-9b70-a7c62c9f80bd&quot;</span></span>
<span id="cb9-10"><a href="#cb9-10" aria-hidden="true" tabindex="-1"></a>        }</span>
<span id="cb9-11"><a href="#cb9-11" aria-hidden="true" tabindex="-1"></a>    }<span class="op">,</span></span>
<span id="cb9-12"><a href="#cb9-12" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;attributeValues&quot;</span><span class="op">:</span> {</span>
<span id="cb9-13"><a href="#cb9-13" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;owner&quot;</span><span class="op">:</span> {</span>
<span id="cb9-14"><a href="#cb9-14" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;S&quot;</span><span class="op">:</span> <span class="st">&quot;gv&quot;</span></span>
<span id="cb9-15"><a href="#cb9-15" aria-hidden="true" tabindex="-1"></a>        }<span class="op">,</span></span>
<span id="cb9-16"><a href="#cb9-16" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;src&quot;</span><span class="op">:</span> {</span>
<span id="cb9-17"><a href="#cb9-17" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;S&quot;</span><span class="op">:</span> <span class="st">&quot;vhv&quot;</span></span>
<span id="cb9-18"><a href="#cb9-18" aria-hidden="true" tabindex="-1"></a>        }</span>
<span id="cb9-19"><a href="#cb9-19" aria-hidden="true" tabindex="-1"></a>    }</span>
<span id="cb9-20"><a href="#cb9-20" aria-hidden="true" tabindex="-1"></a>}<span class="op">,</span></span>
<span id="cb9-21"><a href="#cb9-21" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;parentType&quot;</span><span class="op">:</span> <span class="st">&quot;Mutation&quot;</span><span class="op">,</span></span>
<span id="cb9-22"><a href="#cb9-22" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;path&quot;</span><span class="op">:</span> [</span>
<span id="cb9-23"><a href="#cb9-23" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;createPicture2&quot;</span></span>
<span id="cb9-24"><a href="#cb9-24" aria-hidden="true" tabindex="-1"></a>]<span class="op">,</span></span>
<span id="cb9-25"><a href="#cb9-25" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;requestId&quot;</span><span class="op">:</span> <span class="st">&quot;2d30f54c-3d38-4d29-a355-7e49b13c1ee8&quot;</span><span class="op">,</span></span>
<span id="cb9-26"><a href="#cb9-26" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;context&quot;</span><span class="op">:</span> {</span>
<span id="cb9-27"><a href="#cb9-27" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;arguments&quot;</span><span class="op">:</span> {</span>
<span id="cb9-28"><a href="#cb9-28" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;input&quot;</span><span class="op">:</span> {</span>
<span id="cb9-29"><a href="#cb9-29" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;owner&quot;</span><span class="op">:</span> <span class="st">&quot;gv&quot;</span><span class="op">,</span></span>
<span id="cb9-30"><a href="#cb9-30" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;src&quot;</span><span class="op">:</span> <span class="st">&quot;vhv&quot;</span></span>
<span id="cb9-31"><a href="#cb9-31" aria-hidden="true" tabindex="-1"></a>        }</span>
<span id="cb9-32"><a href="#cb9-32" aria-hidden="true" tabindex="-1"></a>    }<span class="op">,</span></span>
<span id="cb9-33"><a href="#cb9-33" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;prev&quot;</span><span class="op">:</span> {</span>
<span id="cb9-34"><a href="#cb9-34" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;result&quot;</span><span class="op">:</span> {}</span>
<span id="cb9-35"><a href="#cb9-35" aria-hidden="true" tabindex="-1"></a>    }<span class="op">,</span></span>
<span id="cb9-36"><a href="#cb9-36" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;stash&quot;</span><span class="op">:</span> {}<span class="op">,</span></span>
<span id="cb9-37"><a href="#cb9-37" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;outErrors&quot;</span><span class="op">:</span> []</span>
<span id="cb9-38"><a href="#cb9-38" aria-hidden="true" tabindex="-1"></a>}<span class="op">,</span></span>
<span id="cb9-39"><a href="#cb9-39" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;errors&quot;</span><span class="op">:</span> []<span class="op">,</span></span></code></pre></div>
<div class="sourceCode" id="cb10" data-group="clog2254" data-glabel="ResponseFunctionEvaluation"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;logType&quot;</span><span class="op">:</span> <span class="st">&quot;ResponseFunctionEvaluation&quot;</span><span class="op">,</span></span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;functionName&quot;</span><span class="op">:</span> <span class="st">&quot;unit&quot;</span><span class="op">,</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a><span class="op">...</span></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;evaluationResult&quot;</span><span class="op">:</span> {</span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;owner&quot;</span><span class="op">:</span> <span class="st">&quot;gv&quot;</span><span class="op">,</span></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;src&quot;</span><span class="op">:</span> <span class="st">&quot;vhv&quot;</span><span class="op">,</span></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;id&quot;</span><span class="op">:</span> <span class="st">&quot;52216404-ff5b-40b2-9b70-a7c62c9f80bd&quot;</span></span>
<span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a>    }<span class="op">,</span></span>
<span id="cb10-9"><a href="#cb10-9" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;parentType&quot;</span><span class="op">:</span> <span class="st">&quot;Mutation&quot;</span><span class="op">,</span></span>
<span id="cb10-10"><a href="#cb10-10" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;path&quot;</span><span class="op">:</span> [</span>
<span id="cb10-11"><a href="#cb10-11" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;createPicture2&quot;</span></span>
<span id="cb10-12"><a href="#cb10-12" aria-hidden="true" tabindex="-1"></a>]<span class="op">,</span></span>
<span id="cb10-13"><a href="#cb10-13" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;requestId&quot;</span><span class="op">:</span> <span class="st">&quot;2d30f54c-3d38-4d29-a355-7e49b13c1ee8&quot;</span><span class="op">,</span></span>
<span id="cb10-14"><a href="#cb10-14" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;context&quot;</span><span class="op">:</span> {</span>
<span id="cb10-15"><a href="#cb10-15" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;arguments&quot;</span><span class="op">:</span> {</span>
<span id="cb10-16"><a href="#cb10-16" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;input&quot;</span><span class="op">:</span> {</span>
<span id="cb10-17"><a href="#cb10-17" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;owner&quot;</span><span class="op">:</span> <span class="st">&quot;gv&quot;</span><span class="op">,</span></span>
<span id="cb10-18"><a href="#cb10-18" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;src&quot;</span><span class="op">:</span> <span class="st">&quot;vhv&quot;</span></span>
<span id="cb10-19"><a href="#cb10-19" aria-hidden="true" tabindex="-1"></a>        }</span>
<span id="cb10-20"><a href="#cb10-20" aria-hidden="true" tabindex="-1"></a>    }<span class="op">,</span></span>
<span id="cb10-21"><a href="#cb10-21" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;result&quot;</span><span class="op">:</span> {</span>
<span id="cb10-22"><a href="#cb10-22" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;owner&quot;</span><span class="op">:</span> <span class="st">&quot;gv&quot;</span><span class="op">,</span></span>
<span id="cb10-23"><a href="#cb10-23" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;src&quot;</span><span class="op">:</span> <span class="st">&quot;vhv&quot;</span><span class="op">,</span></span>
<span id="cb10-24"><a href="#cb10-24" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;id&quot;</span><span class="op">:</span> <span class="st">&quot;52216404-ff5b-40b2-9b70-a7c62c9f80bd&quot;</span></span>
<span id="cb10-25"><a href="#cb10-25" aria-hidden="true" tabindex="-1"></a>    }<span class="op">,</span></span>
<span id="cb10-26"><a href="#cb10-26" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;prev&quot;</span><span class="op">:</span> {</span>
<span id="cb10-27"><a href="#cb10-27" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;result&quot;</span><span class="op">:</span> {}</span>
<span id="cb10-28"><a href="#cb10-28" aria-hidden="true" tabindex="-1"></a>    }<span class="op">,</span></span>
<span id="cb10-29"><a href="#cb10-29" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;stash&quot;</span><span class="op">:</span> {}<span class="op">,</span></span>
<span id="cb10-30"><a href="#cb10-30" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;outErrors&quot;</span><span class="op">:</span> []</span>
<span id="cb10-31"><a href="#cb10-31" aria-hidden="true" tabindex="-1"></a>}<span class="op">,</span></span>
<span id="cb10-32"><a href="#cb10-32" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;errors&quot;</span><span class="op">:</span> []<span class="op">,</span></span></code></pre></div>
<div class="sourceCode" id="cb11" data-group="clog2254" data-glabel="AfterResponseFunctionEvaluation"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;logType&quot;</span><span class="op">:</span> <span class="st">&quot;AfterResponseFunctionEvaluation&quot;</span><span class="op">,</span></span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a><span class="op">...</span></span>
<span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;context&quot;</span><span class="op">:</span> {</span>
<span id="cb11-4"><a href="#cb11-4" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;arguments&quot;</span><span class="op">:</span> {</span>
<span id="cb11-5"><a href="#cb11-5" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;input&quot;</span><span class="op">:</span> {</span>
<span id="cb11-6"><a href="#cb11-6" aria-hidden="true" tabindex="-1"></a>                <span class="st">&quot;owner&quot;</span><span class="op">:</span> <span class="st">&quot;gv&quot;</span><span class="op">,</span></span>
<span id="cb11-7"><a href="#cb11-7" aria-hidden="true" tabindex="-1"></a>                <span class="st">&quot;src&quot;</span><span class="op">:</span> <span class="st">&quot;vhv&quot;</span></span>
<span id="cb11-8"><a href="#cb11-8" aria-hidden="true" tabindex="-1"></a>            }</span>
<span id="cb11-9"><a href="#cb11-9" aria-hidden="true" tabindex="-1"></a>        }<span class="op">,</span></span>
<span id="cb11-10"><a href="#cb11-10" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;result&quot;</span><span class="op">:</span> {</span>
<span id="cb11-11"><a href="#cb11-11" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;owner&quot;</span><span class="op">:</span> <span class="st">&quot;gv&quot;</span><span class="op">,</span></span>
<span id="cb11-12"><a href="#cb11-12" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;src&quot;</span><span class="op">:</span> <span class="st">&quot;vhv&quot;</span><span class="op">,</span></span>
<span id="cb11-13"><a href="#cb11-13" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;id&quot;</span><span class="op">:</span> <span class="st">&quot;52216404-ff5b-40b2-9b70-a7c62c9f80bd&quot;</span></span>
<span id="cb11-14"><a href="#cb11-14" aria-hidden="true" tabindex="-1"></a>        }<span class="op">,</span></span>
<span id="cb11-15"><a href="#cb11-15" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;prev&quot;</span><span class="op">:</span> {</span>
<span id="cb11-16"><a href="#cb11-16" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;result&quot;</span><span class="op">:</span> {</span>
<span id="cb11-17"><a href="#cb11-17" aria-hidden="true" tabindex="-1"></a>                <span class="st">&quot;owner&quot;</span><span class="op">:</span> <span class="st">&quot;gv&quot;</span><span class="op">,</span></span>
<span id="cb11-18"><a href="#cb11-18" aria-hidden="true" tabindex="-1"></a>                <span class="st">&quot;src&quot;</span><span class="op">:</span> <span class="st">&quot;vhv&quot;</span><span class="op">,</span></span>
<span id="cb11-19"><a href="#cb11-19" aria-hidden="true" tabindex="-1"></a>                <span class="st">&quot;id&quot;</span><span class="op">:</span> <span class="st">&quot;52216404-ff5b-40b2-9b70-a7c62c9f80bd&quot;</span></span>
<span id="cb11-20"><a href="#cb11-20" aria-hidden="true" tabindex="-1"></a>            }</span>
<span id="cb11-21"><a href="#cb11-21" aria-hidden="true" tabindex="-1"></a>        }<span class="op">,</span></span>
<span id="cb11-22"><a href="#cb11-22" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;stash&quot;</span><span class="op">:</span> {}<span class="op">,</span></span>
<span id="cb11-23"><a href="#cb11-23" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;outErrors&quot;</span><span class="op">:</span> []</span>
<span id="cb11-24"><a href="#cb11-24" aria-hidden="true" tabindex="-1"></a>    }<span class="op">,</span></span>
<span id="cb11-25"><a href="#cb11-25" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;fieldInError&quot;</span><span class="op">:</span> <span class="kw">false</span><span class="op">,</span></span>
<span id="cb11-26"><a href="#cb11-26" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;evaluationResult&quot;</span><span class="op">:</span> {</span>
<span id="cb11-27"><a href="#cb11-27" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;owner&quot;</span><span class="op">:</span> <span class="st">&quot;gv&quot;</span><span class="op">,</span></span>
<span id="cb11-28"><a href="#cb11-28" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;src&quot;</span><span class="op">:</span> <span class="st">&quot;vhv&quot;</span><span class="op">,</span></span>
<span id="cb11-29"><a href="#cb11-29" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;id&quot;</span><span class="op">:</span> <span class="st">&quot;52216404-ff5b-40b2-9b70-a7c62c9f80bd&quot;</span></span>
<span id="cb11-30"><a href="#cb11-30" aria-hidden="true" tabindex="-1"></a>}<span class="op">,</span></span>
<span id="cb11-31"><a href="#cb11-31" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;errors&quot;</span><span class="op">:</span> []<span class="op">,</span></span></code></pre></div>
<ul>
<li>lesson of the story is
<ul>
<li>you CANNOT data fetch from pipeline resolver</li>
<li>you MUST use functions to fetch data sources</li>
<li>functions will auto convert dynamoDB type format</li>
</ul></li>
</ul>
</section>
</section>
<section id="translate-vtl-to-js" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Translate VTL to JS</h1>
<ul>
<li>vtl: <code>#util.qr()</code> ==&gt; not needed in js
<ul>
<li>it is used to run vtl statements while suppressing statement output; js doesn’t output statement by default</li>
</ul></li>
<li>vtl: <code>util.toJson({})</code> ==&gt; <code>JSON.parse('{}')</code> in js</li>
<li>vtl: <code>$ctx.args.input.keySet()</code> ==&gt; <code>Object.keys(ctx.args.input)</code> in js</li>
</ul>
</section>
]]></summary>
</entry>
<entry>
    <title>Quick AWS CDK</title>
    <link href="https://userjy.github.io/posts/2022-10-02-AWScdk.html" />
    <id>https://userjy.github.io/posts/2022-10-02-AWScdk.html</id>
    <published>2022-10-02T00:00:00Z</published>
    <updated>2022-10-02T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October  2, 2022
    
</div>
<div class="info">
    
    Tags: <a title="All pages tagged &#39;prog&#39;." href="/tags/prog.html">prog</a>, <a title="All pages tagged &#39;cloud&#39;." href="/tags/cloud.html">cloud</a>, <a title="All pages tagged &#39;aws&#39;." href="/tags/aws.html">aws</a>
    
</div>
<section id="theory" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Theory</h1>
<ul>
<li>In a way CDK is like typescript for Cloudformation
<ul>
<li>use <code>cdk synth</code> like typescript’s <code>tsc</code> to generate the Cloudformation template</li>
<li>run Cloudformation template to spin up resources
<!--  --></li>
</ul></li>
<li>Constructs : Basic reusable building blocks
<ul>
<li>L1 Constructs : one-to-one mapping to cloudformation resources, starts with <code>Cfn</code> like `CfnResolver</li>
<li>L2 Constructs : Pre-configured popular default settings on L1 constructs</li>
<li>L3 Constructs : Composed out of L2 and L1 constructs</li>
<li>Stacks - made out of Constructs</li>
</ul></li>
</ul>
</section>
<section id="practical" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Practical</h1>
<p>to use cdk install it with</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="ex">npm</span> install <span class="at">-g</span> aws-cdk             </span></code></pre></div>
<div class="sourceCode" id="cb2"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="ex">cdk</span> ls <span class="co"># list stacks </span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="ex">cdk</span> destroy</span></code></pre></div>
</section>
<section id="example" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Example</h1>
<section id="spinning-up-s3-bucket" class="level2" data-number="3.1">
<h2 data-number="3.1"><span class="header-section-number">3.1</span> Spinning up S3 bucket</h2>
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="ex">cdk</span> init app <span class="at">--language</span> typescript</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="ex">cdk</span> bootstrap</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="co">#bootstrap creates a s3 bucket called cdk-hnb659fds-assets-729330484136-us-east-1, </span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="co">#SO DONT JUST willy nilly delete s3 buckets</span></span></code></pre></div>
<div class="sourceCode" id="cb4"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="ex">cdk</span> synth</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="co">#this will compile the cloudformation templates in dir cdk.out</span></span></code></pre></div>
<div class="sourceCode" id="cb5" data-filename="lib/cloud_formation-stack.ts"><pre class="sourceCode js"><code class="sourceCode javascript"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> <span class="op">*</span> <span class="im">as</span> cdk <span class="im">from</span> <span class="st">&#39;aws-cdk-lib&#39;</span><span class="op">;</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> {aws_s3} <span class="im">from</span> <span class="st">&#39;aws-cdk-lib&#39;</span><span class="op">;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> { Construct } <span class="im">from</span> <span class="st">&#39;constructs&#39;</span><span class="op">;</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a><span class="co">// import * as sqs from &#39;aws-cdk-lib/aws-sqs&#39;;</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="im">export</span> <span class="kw">class</span> CloudFormationStack <span class="kw">extends</span> cdk<span class="op">.</span><span class="at">Stack</span> {</span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>  <span class="fu">constructor</span>(<span class="dt">scope</span><span class="op">:</span> Construct<span class="op">,</span> <span class="dt">id</span><span class="op">:</span> string<span class="op">,</span> props<span class="op">?:</span> cdk<span class="op">.</span><span class="at">StackProps</span>) {</span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">super</span>(scope<span class="op">,</span> id<span class="op">,</span> props)<span class="op">;</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a>    <span class="co">// The code that defines your stack goes here</span></span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a>    <span class="co">// example resource</span></span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a>    <span class="co">// const queue = new sqs.Queue(this, &#39;CloudFormationQueue&#39;, {</span></span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a>    <span class="co">//   visibilityTimeout: cdk.Duration.seconds(300)</span></span>
<span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a>    <span class="co">// });</span></span>
<span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a>    <span class="kw">const</span> mybucket <span class="op">=</span> <span class="kw">new</span> aws_s3<span class="op">.</span><span class="fu">Bucket</span>(<span class="kw">this</span><span class="op">,</span><span class="st">&#39;MyFirstBucket&#39;</span><span class="op">,</span>{</span>
<span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a>      <span class="dt">versioned</span><span class="op">:</span> <span class="kw">true</span><span class="op">,</span></span>
<span id="cb5-18"><a href="#cb5-18" aria-hidden="true" tabindex="-1"></a>      <span class="dt">removalPolicy</span><span class="op">:</span> cdk<span class="op">.</span><span class="at">RemovalPolicy</span><span class="op">.</span><span class="at">DESTROY</span><span class="op">,</span></span>
<span id="cb5-19"><a href="#cb5-19" aria-hidden="true" tabindex="-1"></a>      <span class="dt">autoDeleteObjects</span><span class="op">:</span> <span class="kw">true</span><span class="op">,</span></span>
<span id="cb5-20"><a href="#cb5-20" aria-hidden="true" tabindex="-1"></a>    })<span class="op">;</span></span>
<span id="cb5-21"><a href="#cb5-21" aria-hidden="true" tabindex="-1"></a>  }</span>
<span id="cb5-22"><a href="#cb5-22" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
</section>
<section id="ec2-instance" class="level2" data-number="3.2">
<h2 data-number="3.2"><span class="header-section-number">3.2</span> ec2 instance</h2>
</section>
</section>
<section id="troubleshooting" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> troubleshooting</h1>
<ul>
<li>Scenario: You start deleting all s3 buckets to clean your account
<ul>
<li>problem: you keep getting error asking <code>did you bootstrap</code> from cdk</li>
<li>solution: delete your CDK toolkit stack via vscode aws plugin</li>
<li>why: You deleted a CDK toolkit s3 bucket dependency thus corrupting the env, so now you need to clean slate it.</li>
</ul></li>
</ul>
</section>
]]></summary>
</entry>
<entry>
    <title>Quick AWS DynamoDB</title>
    <link href="https://userjy.github.io/posts/2022-10-02-AWSDynamo.html" />
    <id>https://userjy.github.io/posts/2022-10-02-AWSDynamo.html</id>
    <published>2022-10-02T00:00:00Z</published>
    <updated>2022-10-02T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October  2, 2022
    
</div>
<div class="info">
    
    Tags: <a title="All pages tagged &#39;prog&#39;." href="/tags/prog.html">prog</a>, <a title="All pages tagged &#39;cloud&#39;." href="/tags/cloud.html">cloud</a>, <a title="All pages tagged &#39;aws&#39;." href="/tags/aws.html">aws</a>
    
</div>
<section id="dynamo-vs-traditional-sql" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Dynamo vs Traditional SQL</h1>
<section id="terms" class="level2" data-number="1.1">
<h2 data-number="1.1"><span class="header-section-number">1.1</span> Terms</h2>
<ul>
<li>Row in SQL , Record/item in DynamoDB , Document in MongoDB</li>
</ul>
</section>
<section id="schemaless" class="level2" data-number="1.2">
<h2 data-number="1.2"><span class="header-section-number">1.2</span> Schema(less)</h2>
<ul>
<li>Dynanmo has no Schema, meaning you do type validation in application code</li>
</ul>
</section>
<section id="sql-scaling-problems" class="level2" data-number="1.3">
<h2 data-number="1.3"><span class="header-section-number">1.3</span> SQL scaling problems</h2>
<ul>
<li>Traditional SQL problems
<ul>
<li>Does not scale
<ul>
<li>SQL JOINS are expensive and cannot be used at scale
<ul>
<li>Most db operations only operate on a single record meaning typically joins arent even neccessary</li>
</ul></li>
</ul></li>
<li>Consistency is expensive at scale
<ul>
<li>only needed for things like banking</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="stateful-vs-stateless-connection" class="level2" data-number="1.4">
<h2 data-number="1.4"><span class="header-section-number">1.4</span> Stateful vs Stateless connection</h2>
<ul>
<li>Traditional SQL opens up stateful TCP connections. (limited connections)</li>
<li>DynamoDB uses stateless HTTP (no-limit)</li>
</ul>
</section>
</section>
]]></summary>
</entry>
<entry>
    <title>Quick AWS Cognito</title>
    <link href="https://userjy.github.io/posts/2022-10-02-AWSCognito.html" />
    <id>https://userjy.github.io/posts/2022-10-02-AWSCognito.html</id>
    <published>2022-10-02T00:00:00Z</published>
    <updated>2022-10-02T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October  2, 2022
    
</div>
<div class="info">
    
    Tags: <a title="All pages tagged &#39;prog&#39;." href="/tags/prog.html">prog</a>, <a title="All pages tagged &#39;cloud&#39;." href="/tags/cloud.html">cloud</a>, <a title="All pages tagged &#39;aws&#39;." href="/tags/aws.html">aws</a>
    
</div>
<p>User Pools vs Identity pools</p>
<ul>
<li>User Pools : Typical login and signup</li>
<li>Identity Pools : Give user access to AWS resource like s3</li>
</ul>
<section id="user-pools" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> User Pools</h1>
<p>Cognito User Pool is mandatory default which is just normal email and password.<br />
Federated Identity Pool can be added which can be FB,Google,Apple or SAML or Open ID Connect providers.</p>
</section>
<section id="hosted-web-ui" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Hosted Web UI</h1>
<p>AWS has their own website that can do the sign-up/sign-in for you.<br />
It redirects to your website URL with the session and other info if sign-in is successful.</p>
<p>https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_InitiateAuth.html</p>
<p><img src="/images/180715_Cognito_0.png" /></p>
</section>
<section id="example" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Example</h1>
<section id="vanilla-js" class="level2" data-number="3.1">
<h2 data-number="3.1"><span class="header-section-number">3.1</span> Vanilla JS</h2>
<p>Below is an example of an extremely simple sign up and log in system with cognito.<br />
Only pulling libraries from a <img src="https://github.com/aws-amplify/amplify-js/tree/main/packages/amazon-cognito-identity-js" alt="cdn" />. (Note: specifically for vanilla JS, when generating a <code>ClientId</code> must leave “generate client secret box” unchecked )</p>
<ul>
<li>Keypoint:
<ul>
<li><code>UserPoolId</code> can be shown publically, it is the id of the cognito pool
<ul>
<li>Only One UserPoolId</li>
</ul></li>
<li><code>ClientId</code> can be shown publically, it is like CORS
<ul>
<li>Multiple ClientId for multiple client apps</li>
</ul></li>
</ul></li>
</ul>
<div class="sourceCode" id="cb1"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="dt">&lt;!doctype </span>html<span class="dt">&gt;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;html&gt;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;head&gt;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;script</span><span class="ot"> type=</span><span class="st">&quot;module&quot;</span> <span class="er">src</span><span class="ot">=</span><span class="st">&quot;https://cdn.jsdelivr.net/npm/amazon-cognito-identity-js@6.1.2/dist/amazon-cognito-identity.min.js&quot;</span><span class="kw">&gt;&lt;/script&gt;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="co">&lt;!-- optional: only if you use other AWS services --&gt;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;script</span><span class="ot"> type=</span><span class="st">&quot;module&quot;</span> <span class="er">src</span><span class="ot">=</span><span class="st">&quot;https://cdnjs.cloudflare.com/ajax/libs/aws-sdk/2.1295.0/aws-sdk.min.js&quot;</span> <span class="er">integrity</span><span class="ot">=</span><span class="st">&quot;sha512-+KWDfuIpaulta79x9a6rt12FiNfCeZfq9lthRy0uKxtKp7juXgjurStedKQT5kwg2ipU+pDD+o2bABXYs6IvEw==&quot;</span> <span class="er">crossorigin</span><span class="ot">=</span><span class="st">&quot;anonymous&quot;</span> <span class="er">referrerpolicy</span><span class="ot">=</span><span class="st">&quot;no-referrer&quot;</span><span class="kw">&gt;&lt;/script&gt;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;title&gt;</span>Our Funky HTML Page<span class="kw">&lt;/title&gt;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;meta</span> <span class="er">name</span><span class="ot">=</span><span class="st">&quot;description&quot;</span> <span class="er">content</span><span class="ot">=</span><span class="st">&quot;Our first page&quot;</span><span class="kw">&gt;</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;meta</span> <span class="er">name</span><span class="ot">=</span><span class="st">&quot;keywords&quot;</span> <span class="er">content</span><span class="ot">=</span><span class="st">&quot;html tutorial template&quot;</span><span class="kw">&gt;</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/head&gt;</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;body&gt;</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>When creating an App Client in cognito, the generate client secret box must be unchecked because the JavaScript SDK doesn&#39;t support apps that have a client secret.  </span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>Else you will get a error &quot;Client 4p0o86nuq106dgkmpl11aej8vi is configured for secret but secret was not received&quot;</span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/body&gt;</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;button</span> <span class="er">id</span><span class="ot">=</span><span class="st">&quot;signup&quot;</span><span class="kw">&gt;</span>sign up <span class="kw">&lt;/button&gt;</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;button</span> <span class="er">id</span><span class="ot">=</span><span class="st">&quot;signin&quot;</span><span class="kw">&gt;</span>sign in <span class="kw">&lt;/button&gt;</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;script</span> <span class="er">defer</span><span class="kw">&gt;</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a><span class="bu">document</span><span class="op">.</span><span class="fu">getElementById</span>(<span class="st">&quot;signup&quot;</span>)<span class="op">.</span><span class="fu">addEventListener</span>(<span class="st">&quot;click&quot;</span><span class="op">,</span>(e) <span class="kw">=&gt;</span>{</span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> poolData <span class="op">=</span> {</span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>        <span class="dt">UserPoolId</span><span class="op">:</span> <span class="st">&#39;us-east-1_zknguzw3R&#39;</span><span class="op">,</span> <span class="co">// Your user pool id here</span></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>        <span class="dt">ClientId</span><span class="op">:</span> <span class="st">&#39;62js8mr29t9kuf432lih20ffld&#39;</span><span class="op">,</span> <span class="co">// Your client id here</span></span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>    }<span class="op">;</span></span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> userPool <span class="op">=</span> <span class="kw">new</span> AmazonCognitoIdentity<span class="op">.</span><span class="fu">CognitoUserPool</span>(poolData)<span class="op">;</span></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> attributeList <span class="op">=</span> []<span class="op">;</span></span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> dataEmail <span class="op">=</span> {</span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>        <span class="dt">Name</span><span class="op">:</span> <span class="st">&#39;email&#39;</span><span class="op">,</span></span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>        <span class="dt">Value</span><span class="op">:</span> <span class="st">&#39;email@mydomain.com&#39;</span><span class="op">,</span></span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>    }<span class="op">;</span></span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> dataPhoneNumber <span class="op">=</span> {</span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>        <span class="dt">Name</span><span class="op">:</span> <span class="st">&#39;phone_number&#39;</span><span class="op">,</span></span>
<span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a>        <span class="dt">Value</span><span class="op">:</span> <span class="st">&#39;+15555555555&#39;</span><span class="op">,</span></span>
<span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a>    }<span class="op">;</span></span>
<span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> attributeEmail <span class="op">=</span> <span class="kw">new</span> AmazonCognitoIdentity<span class="op">.</span><span class="fu">CognitoUserAttribute</span>(dataEmail)<span class="op">;</span></span>
<span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a><span class="co">//    var attributePhoneNumber = new AmazonCognitoIdentity.CognitoUserAttribute(</span></span>
<span id="cb1-40"><a href="#cb1-40" aria-hidden="true" tabindex="-1"></a><span class="co">//        dataPhoneNumber</span></span>
<span id="cb1-41"><a href="#cb1-41" aria-hidden="true" tabindex="-1"></a><span class="co">//    );</span></span>
<span id="cb1-42"><a href="#cb1-42" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-43"><a href="#cb1-43" aria-hidden="true" tabindex="-1"></a>    attributeList<span class="op">.</span><span class="fu">push</span>(attributeEmail)<span class="op">;</span></span>
<span id="cb1-44"><a href="#cb1-44" aria-hidden="true" tabindex="-1"></a>    <span class="co">//attributeList.push(attributePhoneNumber);</span></span>
<span id="cb1-45"><a href="#cb1-45" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-46"><a href="#cb1-46" aria-hidden="true" tabindex="-1"></a>    userPool<span class="op">.</span><span class="fu">signUp</span>(<span class="st">&#39;username1&#39;</span><span class="op">,</span> <span class="st">&#39;usernamE8&amp;&#39;</span><span class="op">,</span> attributeList<span class="op">,</span> <span class="kw">null</span><span class="op">,</span> <span class="kw">function</span>(</span>
<span id="cb1-47"><a href="#cb1-47" aria-hidden="true" tabindex="-1"></a>        err<span class="op">,</span></span>
<span id="cb1-48"><a href="#cb1-48" aria-hidden="true" tabindex="-1"></a>        result</span>
<span id="cb1-49"><a href="#cb1-49" aria-hidden="true" tabindex="-1"></a>    ) {</span>
<span id="cb1-50"><a href="#cb1-50" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> (err) {</span>
<span id="cb1-51"><a href="#cb1-51" aria-hidden="true" tabindex="-1"></a>            <span class="fu">alert</span>(err<span class="op">.</span><span class="at">message</span> <span class="op">||</span> <span class="bu">JSON</span><span class="op">.</span><span class="fu">stringify</span>(err))<span class="op">;</span></span>
<span id="cb1-52"><a href="#cb1-52" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span><span class="op">;</span></span>
<span id="cb1-53"><a href="#cb1-53" aria-hidden="true" tabindex="-1"></a>        }</span>
<span id="cb1-54"><a href="#cb1-54" aria-hidden="true" tabindex="-1"></a>        <span class="kw">var</span> cognitoUser <span class="op">=</span> result<span class="op">.</span><span class="at">user</span><span class="op">;</span></span>
<span id="cb1-55"><a href="#cb1-55" aria-hidden="true" tabindex="-1"></a>        <span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">&#39;user name is &#39;</span> <span class="op">+</span> cognitoUser<span class="op">.</span><span class="fu">getUsername</span>())<span class="op">;</span></span>
<span id="cb1-56"><a href="#cb1-56" aria-hidden="true" tabindex="-1"></a>    })<span class="op">;</span></span>
<span id="cb1-57"><a href="#cb1-57" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-58"><a href="#cb1-58" aria-hidden="true" tabindex="-1"></a>})</span>
<span id="cb1-59"><a href="#cb1-59" aria-hidden="true" tabindex="-1"></a>    </span>
<span id="cb1-60"><a href="#cb1-60" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-61"><a href="#cb1-61" aria-hidden="true" tabindex="-1"></a><span class="bu">document</span><span class="op">.</span><span class="fu">getElementById</span>(<span class="st">&quot;signin&quot;</span>)<span class="op">.</span><span class="fu">addEventListener</span>(<span class="st">&quot;click&quot;</span><span class="op">,</span>(e) <span class="kw">=&gt;</span>{</span>
<span id="cb1-62"><a href="#cb1-62" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> authenticationData <span class="op">=</span> {</span>
<span id="cb1-63"><a href="#cb1-63" aria-hidden="true" tabindex="-1"></a>	<span class="dt">Username</span><span class="op">:</span> <span class="st">&#39;username1&#39;</span><span class="op">,</span></span>
<span id="cb1-64"><a href="#cb1-64" aria-hidden="true" tabindex="-1"></a>	<span class="dt">Password</span><span class="op">:</span> <span class="st">&#39;usernamE8&amp;&#39;</span><span class="op">,</span></span>
<span id="cb1-65"><a href="#cb1-65" aria-hidden="true" tabindex="-1"></a>}<span class="op">;</span></span>
<span id="cb1-66"><a href="#cb1-66" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> authenticationDetails <span class="op">=</span> <span class="kw">new</span> AmazonCognitoIdentity<span class="op">.</span><span class="fu">AuthenticationDetails</span>(</span>
<span id="cb1-67"><a href="#cb1-67" aria-hidden="true" tabindex="-1"></a>	authenticationData</span>
<span id="cb1-68"><a href="#cb1-68" aria-hidden="true" tabindex="-1"></a>)<span class="op">;</span></span>
<span id="cb1-69"><a href="#cb1-69" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> poolData <span class="op">=</span> {</span>
<span id="cb1-70"><a href="#cb1-70" aria-hidden="true" tabindex="-1"></a>	<span class="dt">UserPoolId</span><span class="op">:</span> <span class="st">&#39;us-east-1_zknguzw3R&#39;</span><span class="op">,</span> <span class="co">// Your user pool id here</span></span>
<span id="cb1-71"><a href="#cb1-71" aria-hidden="true" tabindex="-1"></a>	<span class="dt">ClientId</span><span class="op">:</span> <span class="st">&#39;62js8mr29t9kuf432lih20ffld&#39;</span><span class="op">,</span> <span class="co">// Your client id here</span></span>
<span id="cb1-72"><a href="#cb1-72" aria-hidden="true" tabindex="-1"></a>}<span class="op">;</span></span>
<span id="cb1-73"><a href="#cb1-73" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> userPool <span class="op">=</span> <span class="kw">new</span> AmazonCognitoIdentity<span class="op">.</span><span class="fu">CognitoUserPool</span>(poolData)<span class="op">;</span></span>
<span id="cb1-74"><a href="#cb1-74" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> userData <span class="op">=</span> {</span>
<span id="cb1-75"><a href="#cb1-75" aria-hidden="true" tabindex="-1"></a>	<span class="dt">Username</span><span class="op">:</span> <span class="st">&#39;username1&#39;</span><span class="op">,</span></span>
<span id="cb1-76"><a href="#cb1-76" aria-hidden="true" tabindex="-1"></a>	<span class="dt">Pool</span><span class="op">:</span> userPool<span class="op">,</span></span>
<span id="cb1-77"><a href="#cb1-77" aria-hidden="true" tabindex="-1"></a>}<span class="op">;</span></span>
<span id="cb1-78"><a href="#cb1-78" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> cognitoUser <span class="op">=</span> <span class="kw">new</span> AmazonCognitoIdentity<span class="op">.</span><span class="fu">CognitoUser</span>(userData)<span class="op">;</span></span>
<span id="cb1-79"><a href="#cb1-79" aria-hidden="true" tabindex="-1"></a>cognitoUser<span class="op">.</span><span class="fu">authenticateUser</span>(authenticationDetails<span class="op">,</span> {</span>
<span id="cb1-80"><a href="#cb1-80" aria-hidden="true" tabindex="-1"></a>	<span class="dt">onSuccess</span><span class="op">:</span> <span class="kw">function</span>(result) {</span>
<span id="cb1-81"><a href="#cb1-81" aria-hidden="true" tabindex="-1"></a>		<span class="kw">var</span> accessToken <span class="op">=</span> result<span class="op">.</span><span class="fu">getAccessToken</span>()<span class="op">.</span><span class="fu">getJwtToken</span>()<span class="op">;</span></span>
<span id="cb1-82"><a href="#cb1-82" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-83"><a href="#cb1-83" aria-hidden="true" tabindex="-1"></a>		<span class="co">//POTENTIAL: Region needs to be set if not already set previously elsewhere.</span></span>
<span id="cb1-84"><a href="#cb1-84" aria-hidden="true" tabindex="-1"></a>		AWS<span class="op">.</span><span class="at">config</span><span class="op">.</span><span class="at">region</span> <span class="op">=</span> <span class="st">&#39;us-east-1&#39;</span><span class="op">;</span></span>
<span id="cb1-85"><a href="#cb1-85" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-86"><a href="#cb1-86" aria-hidden="true" tabindex="-1"></a>		AWS<span class="op">.</span><span class="at">config</span><span class="op">.</span><span class="at">credentials</span> <span class="op">=</span> <span class="kw">new</span> AWS<span class="op">.</span><span class="fu">CognitoIdentityCredentials</span>({</span>
<span id="cb1-87"><a href="#cb1-87" aria-hidden="true" tabindex="-1"></a>			<span class="dt">IdentityPoolId</span><span class="op">:</span> <span class="st">&#39;...&#39;</span><span class="op">,</span> <span class="co">// your identity pool id here</span></span>
<span id="cb1-88"><a href="#cb1-88" aria-hidden="true" tabindex="-1"></a>			<span class="dt">Logins</span><span class="op">:</span> {</span>
<span id="cb1-89"><a href="#cb1-89" aria-hidden="true" tabindex="-1"></a>				<span class="co">// Change the key below according to the specific region your user pool is in.</span></span>
<span id="cb1-90"><a href="#cb1-90" aria-hidden="true" tabindex="-1"></a>				<span class="st">&#39;cognito-idp.&lt;region&gt;.amazonaws.com/&lt;YOUR_USER_POOL_ID&gt;&#39;</span><span class="op">:</span> result</span>
<span id="cb1-91"><a href="#cb1-91" aria-hidden="true" tabindex="-1"></a>					<span class="op">.</span><span class="fu">getIdToken</span>()</span>
<span id="cb1-92"><a href="#cb1-92" aria-hidden="true" tabindex="-1"></a>					<span class="op">.</span><span class="fu">getJwtToken</span>()<span class="op">,</span></span>
<span id="cb1-93"><a href="#cb1-93" aria-hidden="true" tabindex="-1"></a>			}<span class="op">,</span></span>
<span id="cb1-94"><a href="#cb1-94" aria-hidden="true" tabindex="-1"></a>		})<span class="op">;</span></span>
<span id="cb1-95"><a href="#cb1-95" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-96"><a href="#cb1-96" aria-hidden="true" tabindex="-1"></a>		<span class="co">//refreshes credentials using AWS.CognitoIdentity.getCredentialsForIdentity()</span></span>
<span id="cb1-97"><a href="#cb1-97" aria-hidden="true" tabindex="-1"></a>		AWS<span class="op">.</span><span class="at">config</span><span class="op">.</span><span class="at">credentials</span><span class="op">.</span><span class="fu">refresh</span>(error <span class="kw">=&gt;</span> {</span>
<span id="cb1-98"><a href="#cb1-98" aria-hidden="true" tabindex="-1"></a>			<span class="cf">if</span> (error) {</span>
<span id="cb1-99"><a href="#cb1-99" aria-hidden="true" tabindex="-1"></a>				<span class="bu">console</span><span class="op">.</span><span class="fu">error</span>(error)<span class="op">;</span></span>
<span id="cb1-100"><a href="#cb1-100" aria-hidden="true" tabindex="-1"></a>			} <span class="cf">else</span> {</span>
<span id="cb1-101"><a href="#cb1-101" aria-hidden="true" tabindex="-1"></a>				<span class="co">// Instantiate aws sdk service objects now that the credentials have been updated.</span></span>
<span id="cb1-102"><a href="#cb1-102" aria-hidden="true" tabindex="-1"></a>				<span class="co">// example: var s3 = new AWS.S3();</span></span>
<span id="cb1-103"><a href="#cb1-103" aria-hidden="true" tabindex="-1"></a>				<span class="bu">console</span><span class="op">.</span><span class="fu">log</span>(<span class="st">&#39;Successfully logged!&#39;</span>)<span class="op">;</span></span>
<span id="cb1-104"><a href="#cb1-104" aria-hidden="true" tabindex="-1"></a>			}</span>
<span id="cb1-105"><a href="#cb1-105" aria-hidden="true" tabindex="-1"></a>		})<span class="op">;</span></span>
<span id="cb1-106"><a href="#cb1-106" aria-hidden="true" tabindex="-1"></a>	}<span class="op">,</span></span>
<span id="cb1-107"><a href="#cb1-107" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-108"><a href="#cb1-108" aria-hidden="true" tabindex="-1"></a>	<span class="dt">onFailure</span><span class="op">:</span> <span class="kw">function</span>(err) {</span>
<span id="cb1-109"><a href="#cb1-109" aria-hidden="true" tabindex="-1"></a>		<span class="fu">alert</span>(err<span class="op">.</span><span class="at">message</span> <span class="op">||</span> <span class="bu">JSON</span><span class="op">.</span><span class="fu">stringify</span>(err))<span class="op">;</span></span>
<span id="cb1-110"><a href="#cb1-110" aria-hidden="true" tabindex="-1"></a>	}<span class="op">,</span></span>
<span id="cb1-111"><a href="#cb1-111" aria-hidden="true" tabindex="-1"></a>})<span class="op">;</span></span>
<span id="cb1-112"><a href="#cb1-112" aria-hidden="true" tabindex="-1"></a>})</span>
<span id="cb1-113"><a href="#cb1-113" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/script&gt;</span></span>
<span id="cb1-114"><a href="#cb1-114" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/html&gt;</span></span></code></pre></div>
</section>
</section>
]]></summary>
</entry>
<entry>
    <title>Quick AWS AppSync</title>
    <link href="https://userjy.github.io/posts/2022-10-02-AWSAppSync.html" />
    <id>https://userjy.github.io/posts/2022-10-02-AWSAppSync.html</id>
    <published>2022-10-02T00:00:00Z</published>
    <updated>2022-10-02T00:00:00Z</updated>
    <summary type="html"><![CDATA[<div class="info">
    Posted on October  2, 2022
    
</div>
<div class="info">
    
    Tags: <a title="All pages tagged &#39;prog&#39;." href="/tags/prog.html">prog</a>, <a title="All pages tagged &#39;cloud&#39;." href="/tags/cloud.html">cloud</a>, <a title="All pages tagged &#39;aws&#39;." href="/tags/aws.html">aws</a>
    
</div>
<section id="summary" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Summary</h1>
<ul>
<li>GraphQL schema similar to interface or type-signature</li>
<li>pipelineResolver similar to concrete implementation of interface</li>
</ul>
</section>
<section id="schema" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Schema</h1>
<div class="sourceCode" id="cb1"><pre class="sourceCode json"><code class="sourceCode json"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="er">type</span> <span class="er">Picture</span> <span class="fu">{</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>	<span class="er">id</span><span class="fu">:</span> <span class="er">ID!</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>	<span class="er">owner:</span> <span class="er">ID!</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>	<span class="er">src:</span> <span class="er">String</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="er">type</span> <span class="er">Query</span> <span class="fu">{</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>	<span class="er">myCustomQuery(id</span><span class="fu">:</span> <span class="er">ID!):</span> <span class="ot">[</span><span class="er">Picture</span><span class="ot">]</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>		<span class="er">@aws_auth(cognito_groups:</span> <span class="ot">[</span><span class="st">&quot;Admins&quot;</span><span class="ot">,</span><span class="st">&quot;Viewers&quot;</span><span class="ot">]</span><span class="er">)</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a><span class="er">schema</span> <span class="fu">{</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>	<span class="er">query</span><span class="fu">:</span> <span class="er">Query</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span></code></pre></div>
</section>
<section id="attach-dynamodb" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Attach dynamoDB</h1>
<ul>
<li>Click “Create Resources”
<ul>
<li>Use existing type &gt;&gt; “Picture”</li>
</ul></li>
</ul>
<div class="sourceCode" id="cb2"><pre class="sourceCode json"><code class="sourceCode json"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="er">input</span> <span class="er">CreatePictureInput</span> <span class="fu">{</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>	<span class="er">owner</span><span class="fu">:</span> <span class="er">ID!</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>	<span class="er">src:</span> <span class="er">String</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="er">input</span> <span class="er">DeletePictureInput</span> <span class="fu">{</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>	<span class="er">id</span><span class="fu">:</span> <span class="er">ID!</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a><span class="er">type</span> <span class="er">Mutation</span> <span class="fu">{</span></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>	<span class="er">createPicture(input</span><span class="fu">:</span> <span class="er">CreatePictureInput!):</span> <span class="er">Picture</span></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>	<span class="er">updatePicture(input:</span> <span class="er">UpdatePictureInput!):</span> <span class="er">Picture</span></span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>	<span class="er">deletePicture(input:</span> <span class="er">DeletePictureInput!):</span> <span class="er">Picture</span></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a><span class="er">type</span> <span class="er">Picture</span> <span class="fu">{</span></span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>	<span class="er">id</span><span class="fu">:</span> <span class="er">ID!</span></span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>	<span class="er">owner:</span> <span class="er">ID!</span></span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>	<span class="er">src:</span> <span class="er">String</span></span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a><span class="er">type</span> <span class="er">PictureConnection</span> <span class="fu">{</span></span>
<span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>	<span class="er">items</span><span class="fu">:</span> <span class="ot">[</span><span class="er">Picture</span><span class="ot">]</span></span>
<span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a>	<span class="er">nextToken:</span> <span class="er">String</span></span>
<span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-27"><a href="#cb2-27" aria-hidden="true" tabindex="-1"></a><span class="er">type</span> <span class="er">Query</span> <span class="fu">{</span></span>
<span id="cb2-28"><a href="#cb2-28" aria-hidden="true" tabindex="-1"></a>	<span class="er">myCustomQuery(id</span><span class="fu">:</span> <span class="er">ID!):</span> <span class="ot">[</span><span class="er">Picture</span><span class="ot">]</span></span>
<span id="cb2-29"><a href="#cb2-29" aria-hidden="true" tabindex="-1"></a>		<span class="er">@aws_auth(cognito_groups:</span> <span class="ot">[</span><span class="st">&quot;Admins&quot;</span><span class="ot">,</span><span class="st">&quot;Viewers&quot;</span><span class="ot">]</span><span class="er">)</span></span>
<span id="cb2-30"><a href="#cb2-30" aria-hidden="true" tabindex="-1"></a>	<span class="er">getPicture(id:</span> <span class="er">ID!):</span> <span class="er">Picture</span></span>
<span id="cb2-31"><a href="#cb2-31" aria-hidden="true" tabindex="-1"></a>	<span class="er">listPictures(filter:</span> <span class="er">TablePictureFilterInput</span><span class="fu">,</span> <span class="er">limit</span><span class="fu">:</span> <span class="er">Int</span><span class="fu">,</span> <span class="er">nextToken</span><span class="fu">:</span> <span class="er">String):</span> <span class="er">PictureConnection</span></span>
<span id="cb2-32"><a href="#cb2-32" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb2-33"><a href="#cb2-33" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-34"><a href="#cb2-34" aria-hidden="true" tabindex="-1"></a><span class="er">type</span> <span class="er">Subscription</span> <span class="fu">{</span></span>
<span id="cb2-35"><a href="#cb2-35" aria-hidden="true" tabindex="-1"></a>	<span class="er">onCreatePicture(id</span><span class="fu">:</span> <span class="er">ID</span><span class="fu">,</span> <span class="er">owner</span><span class="fu">:</span> <span class="er">ID</span><span class="fu">,</span> <span class="er">src</span><span class="fu">:</span> <span class="er">String):</span> <span class="er">Picture</span></span>
<span id="cb2-36"><a href="#cb2-36" aria-hidden="true" tabindex="-1"></a>		<span class="er">@aws_subscribe(mutations:</span> <span class="ot">[</span><span class="st">&quot;createPicture&quot;</span><span class="ot">]</span><span class="er">)</span></span>
<span id="cb2-37"><a href="#cb2-37" aria-hidden="true" tabindex="-1"></a>	<span class="er">onUpdatePicture(id:</span> <span class="er">ID</span><span class="fu">,</span> <span class="er">owner</span><span class="fu">:</span> <span class="er">ID</span><span class="fu">,</span> <span class="er">src</span><span class="fu">:</span> <span class="er">String):</span> <span class="er">Picture</span></span>
<span id="cb2-38"><a href="#cb2-38" aria-hidden="true" tabindex="-1"></a>		<span class="er">@aws_subscribe(mutations:</span> <span class="ot">[</span><span class="st">&quot;updatePicture&quot;</span><span class="ot">]</span><span class="er">)</span></span>
<span id="cb2-39"><a href="#cb2-39" aria-hidden="true" tabindex="-1"></a>	<span class="er">onDeletePicture(id:</span> <span class="er">ID</span><span class="fu">,</span> <span class="er">owner</span><span class="fu">:</span> <span class="er">ID</span><span class="fu">,</span> <span class="er">src</span><span class="fu">:</span> <span class="er">String):</span> <span class="er">Picture</span></span>
<span id="cb2-40"><a href="#cb2-40" aria-hidden="true" tabindex="-1"></a>		<span class="er">@aws_subscribe(mutations:</span> <span class="ot">[</span><span class="st">&quot;deletePicture&quot;</span><span class="ot">]</span><span class="er">)</span></span>
<span id="cb2-41"><a href="#cb2-41" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb2-42"><a href="#cb2-42" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-43"><a href="#cb2-43" aria-hidden="true" tabindex="-1"></a><span class="er">input</span> <span class="er">TableBooleanFilterInput</span> <span class="fu">{</span></span>
<span id="cb2-44"><a href="#cb2-44" aria-hidden="true" tabindex="-1"></a>	<span class="er">ne</span><span class="fu">:</span> <span class="er">Boolean</span></span>
<span id="cb2-45"><a href="#cb2-45" aria-hidden="true" tabindex="-1"></a>	<span class="er">eq:</span> <span class="er">Boolean</span></span>
<span id="cb2-46"><a href="#cb2-46" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb2-47"><a href="#cb2-47" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-48"><a href="#cb2-48" aria-hidden="true" tabindex="-1"></a><span class="er">input</span> <span class="er">TableFloatFilterInput</span> <span class="fu">{</span></span>
<span id="cb2-49"><a href="#cb2-49" aria-hidden="true" tabindex="-1"></a>	<span class="er">ne</span><span class="fu">:</span> <span class="er">Float</span></span>
<span id="cb2-50"><a href="#cb2-50" aria-hidden="true" tabindex="-1"></a>	<span class="er">eq:</span> <span class="er">Float</span></span>
<span id="cb2-51"><a href="#cb2-51" aria-hidden="true" tabindex="-1"></a>	<span class="er">le:</span> <span class="er">Float</span></span>
<span id="cb2-52"><a href="#cb2-52" aria-hidden="true" tabindex="-1"></a>	<span class="er">lt:</span> <span class="er">Float</span></span>
<span id="cb2-53"><a href="#cb2-53" aria-hidden="true" tabindex="-1"></a>	<span class="er">ge:</span> <span class="er">Float</span></span>
<span id="cb2-54"><a href="#cb2-54" aria-hidden="true" tabindex="-1"></a>	<span class="er">gt:</span> <span class="er">Float</span></span>
<span id="cb2-55"><a href="#cb2-55" aria-hidden="true" tabindex="-1"></a>	<span class="er">contains:</span> <span class="er">Float</span></span>
<span id="cb2-56"><a href="#cb2-56" aria-hidden="true" tabindex="-1"></a>	<span class="er">notContains:</span> <span class="er">Float</span></span>
<span id="cb2-57"><a href="#cb2-57" aria-hidden="true" tabindex="-1"></a>	<span class="er">between:</span> <span class="ot">[</span><span class="er">Float</span><span class="ot">]</span></span>
<span id="cb2-58"><a href="#cb2-58" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb2-59"><a href="#cb2-59" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-60"><a href="#cb2-60" aria-hidden="true" tabindex="-1"></a><span class="er">input</span> <span class="er">TableIDFilterInput</span> <span class="fu">{</span></span>
<span id="cb2-61"><a href="#cb2-61" aria-hidden="true" tabindex="-1"></a>	<span class="er">ne</span><span class="fu">:</span> <span class="er">ID</span></span>
<span id="cb2-62"><a href="#cb2-62" aria-hidden="true" tabindex="-1"></a>	<span class="er">eq:</span> <span class="er">ID</span></span>
<span id="cb2-63"><a href="#cb2-63" aria-hidden="true" tabindex="-1"></a>	<span class="er">le:</span> <span class="er">ID</span></span>
<span id="cb2-64"><a href="#cb2-64" aria-hidden="true" tabindex="-1"></a>	<span class="er">lt:</span> <span class="er">ID</span></span>
<span id="cb2-65"><a href="#cb2-65" aria-hidden="true" tabindex="-1"></a>	<span class="er">ge:</span> <span class="er">ID</span></span>
<span id="cb2-66"><a href="#cb2-66" aria-hidden="true" tabindex="-1"></a>	<span class="er">gt:</span> <span class="er">ID</span></span>
<span id="cb2-67"><a href="#cb2-67" aria-hidden="true" tabindex="-1"></a>	<span class="er">contains:</span> <span class="er">ID</span></span>
<span id="cb2-68"><a href="#cb2-68" aria-hidden="true" tabindex="-1"></a>	<span class="er">notContains:</span> <span class="er">ID</span></span>
<span id="cb2-69"><a href="#cb2-69" aria-hidden="true" tabindex="-1"></a>	<span class="er">between:</span> <span class="ot">[</span><span class="er">ID</span><span class="ot">]</span></span>
<span id="cb2-70"><a href="#cb2-70" aria-hidden="true" tabindex="-1"></a>	<span class="er">beginsWith:</span> <span class="er">ID</span></span>
<span id="cb2-71"><a href="#cb2-71" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb2-72"><a href="#cb2-72" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-73"><a href="#cb2-73" aria-hidden="true" tabindex="-1"></a><span class="er">input</span> <span class="er">TableIntFilterInput</span> <span class="fu">{</span></span>
<span id="cb2-74"><a href="#cb2-74" aria-hidden="true" tabindex="-1"></a>	<span class="er">ne</span><span class="fu">:</span> <span class="er">Int</span></span>
<span id="cb2-75"><a href="#cb2-75" aria-hidden="true" tabindex="-1"></a>	<span class="er">eq:</span> <span class="er">Int</span></span>
<span id="cb2-76"><a href="#cb2-76" aria-hidden="true" tabindex="-1"></a>	<span class="er">le:</span> <span class="er">Int</span></span>
<span id="cb2-77"><a href="#cb2-77" aria-hidden="true" tabindex="-1"></a>	<span class="er">lt:</span> <span class="er">Int</span></span>
<span id="cb2-78"><a href="#cb2-78" aria-hidden="true" tabindex="-1"></a>	<span class="er">ge:</span> <span class="er">Int</span></span>
<span id="cb2-79"><a href="#cb2-79" aria-hidden="true" tabindex="-1"></a>	<span class="er">gt:</span> <span class="er">Int</span></span>
<span id="cb2-80"><a href="#cb2-80" aria-hidden="true" tabindex="-1"></a>	<span class="er">contains:</span> <span class="er">Int</span></span>
<span id="cb2-81"><a href="#cb2-81" aria-hidden="true" tabindex="-1"></a>	<span class="er">notContains:</span> <span class="er">Int</span></span>
<span id="cb2-82"><a href="#cb2-82" aria-hidden="true" tabindex="-1"></a>	<span class="er">between:</span> <span class="ot">[</span><span class="er">Int</span><span class="ot">]</span></span>
<span id="cb2-83"><a href="#cb2-83" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb2-84"><a href="#cb2-84" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-85"><a href="#cb2-85" aria-hidden="true" tabindex="-1"></a><span class="er">input</span> <span class="er">TablePictureFilterInput</span> <span class="fu">{</span></span>
<span id="cb2-86"><a href="#cb2-86" aria-hidden="true" tabindex="-1"></a>	<span class="er">id</span><span class="fu">:</span> <span class="er">TableIDFilterInput</span></span>
<span id="cb2-87"><a href="#cb2-87" aria-hidden="true" tabindex="-1"></a>	<span class="er">owner:</span> <span class="er">TableIDFilterInput</span></span>
<span id="cb2-88"><a href="#cb2-88" aria-hidden="true" tabindex="-1"></a>	<span class="er">src:</span> <span class="er">TableStringFilterInput</span></span>
<span id="cb2-89"><a href="#cb2-89" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb2-90"><a href="#cb2-90" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-91"><a href="#cb2-91" aria-hidden="true" tabindex="-1"></a><span class="er">input</span> <span class="er">TableStringFilterInput</span> <span class="fu">{</span></span>
<span id="cb2-92"><a href="#cb2-92" aria-hidden="true" tabindex="-1"></a>	<span class="er">ne</span><span class="fu">:</span> <span class="er">String</span></span>
<span id="cb2-93"><a href="#cb2-93" aria-hidden="true" tabindex="-1"></a>	<span class="er">eq:</span> <span class="er">String</span></span>
<span id="cb2-94"><a href="#cb2-94" aria-hidden="true" tabindex="-1"></a>	<span class="er">le:</span> <span class="er">String</span></span>
<span id="cb2-95"><a href="#cb2-95" aria-hidden="true" tabindex="-1"></a>	<span class="er">lt:</span> <span class="er">String</span></span>
<span id="cb2-96"><a href="#cb2-96" aria-hidden="true" tabindex="-1"></a>	<span class="er">ge:</span> <span class="er">String</span></span>
<span id="cb2-97"><a href="#cb2-97" aria-hidden="true" tabindex="-1"></a>	<span class="er">gt:</span> <span class="er">String</span></span>
<span id="cb2-98"><a href="#cb2-98" aria-hidden="true" tabindex="-1"></a>	<span class="er">contains:</span> <span class="er">String</span></span>
<span id="cb2-99"><a href="#cb2-99" aria-hidden="true" tabindex="-1"></a>	<span class="er">notContains:</span> <span class="er">String</span></span>
<span id="cb2-100"><a href="#cb2-100" aria-hidden="true" tabindex="-1"></a>	<span class="er">between:</span> <span class="ot">[</span><span class="er">String</span><span class="ot">]</span></span>
<span id="cb2-101"><a href="#cb2-101" aria-hidden="true" tabindex="-1"></a>	<span class="er">beginsWith:</span> <span class="er">String</span></span>
<span id="cb2-102"><a href="#cb2-102" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb2-103"><a href="#cb2-103" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-104"><a href="#cb2-104" aria-hidden="true" tabindex="-1"></a><span class="er">input</span> <span class="er">UpdatePictureInput</span> <span class="fu">{</span></span>
<span id="cb2-105"><a href="#cb2-105" aria-hidden="true" tabindex="-1"></a>	<span class="er">id</span><span class="fu">:</span> <span class="er">ID!</span></span>
<span id="cb2-106"><a href="#cb2-106" aria-hidden="true" tabindex="-1"></a>	<span class="er">owner:</span> <span class="er">ID</span></span>
<span id="cb2-107"><a href="#cb2-107" aria-hidden="true" tabindex="-1"></a>	<span class="er">src:</span> <span class="er">String</span></span>
<span id="cb2-108"><a href="#cb2-108" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span>
<span id="cb2-109"><a href="#cb2-109" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-110"><a href="#cb2-110" aria-hidden="true" tabindex="-1"></a><span class="er">schema</span> <span class="fu">{</span></span>
<span id="cb2-111"><a href="#cb2-111" aria-hidden="true" tabindex="-1"></a>	<span class="er">query</span><span class="fu">:</span> <span class="er">Query</span></span>
<span id="cb2-112"><a href="#cb2-112" aria-hidden="true" tabindex="-1"></a>	<span class="er">mutation:</span> <span class="er">Mutation</span></span>
<span id="cb2-113"><a href="#cb2-113" aria-hidden="true" tabindex="-1"></a>	<span class="er">subscription:</span> <span class="er">Subscription</span></span>
<span id="cb2-114"><a href="#cb2-114" aria-hidden="true" tabindex="-1"></a><span class="fu">}</span></span></code></pre></div>
<ul>
<li>Analysis AppSync autogeneration:
<ul>
<li>Basically builds CRUD with
<ul>
<li>CUD with Mutation/Subscription type</li>
<li>R with Query type</li>
</ul></li>
<li>type Mutations contains CREATE, UPDATE, DELETE and and their respective input types
<ul>
<li><code>createPicture(input: CreatePictureInput!): Picture</code></li>
<li><code>type CreatePictureInput {..}</code></li>
</ul></li>
<li>type Query contains READ in the forms of read 1 element or read list of elements
<ul>
<li><code>getPicture(id: ID!): Picture</code></li>
<li><code>listPictures(filter: TablePictureFilterInput, limit: Int, nextToken: String): PictureConnection</code>
<ul>
<li><code>type PictureConnection</code> contains <code>nextToken</code> and <code>[Picture]</code>
<ul>
<li>nextToken is alot like redis SCAN’s Last Searched Index,</li>
<li>listPictures will only return a partial list, and the nextToken is the index of the next partial list until nextToken is null</li>
</ul></li>
<li><code>type TablePictureFilterInput</code> contains <code>Table____FilterInput</code></li>
</ul></li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="appsync-query-builder-ui" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> AppSync Query builder UI</h1>
<p><img src="/images/appsyncQuery129342.png" /></p>
<ul>
<li>Input is boxed in green</li>
<li>Output is boxed in orange</li>
<li>Query builder is boxed in brown</li>
<li>Query result is the far right sidebar</li>
</ul>
<p>NOTICE: Even though <code>owner*: hi</code> is used for Input, the Query result does not show any owner results. That is because we did not include <code>owner</code> in the output boxed in orange.</p>
</section>
]]></summary>
</entry>

</feed>
