---
title: The State of Full Stack Languages in 2021
---

In the early 2000s, the sound of Javascript induced a visible gag among most programmers in online forums. 
```
[] == ![];
```

But today with the introduction of Chrome V8 Engine, NodeJS, Typescript, Angular, React the same language would be met with a begrudging acceptance.

Javascript is not going away. Why? 

Because it doesn't need to.
Browsers are optimized for Javascript. 
As a language, Javascript has adapted to become relatively safer with a type system(Typescript). 
Even as a backend language Javascript has gained popularity(NodeJS Express).

Speaking of backend, there is another revolutionary technology that has made its mark on the 21st century. 

The Cloud.

We are now in the age of containers, microservices and serverless functions. There are 3 main cloud providers, Amazon Web Services(AWS), Microsoft Azure, Google Compute Engine. Since my main background knowledge is in AWS, I will refer to AWS when speaking about the cloud.

As Amazon continues to introduce more modular generalizeable lambdas without cold starts, we may even begin to see the decline of backend technologies like Java Spring or C# ASP.NET. Additionally scripting languages like javascript or python are the preferred choice for serverless function as opposed to Java and C# due to their need to compile to byte code then startup a Virtual Machine to run it. 

This post would not be complete without an excerpt on AI and Machine Learning. Python is the language of modern data science; there are research grade packages like scikit-learn, tensorflow, pytorch, etc. 

Simply put, if I had to bet on languages that will continue to grow in the future, I would bet on Javascript, Python and NoSQL/SQL. You can build a fully scalable full stack application with familarity of the three aforementioned languages on Amazon Web Services. 
You heard it here folks, the future will be the JPD stack with D standing for DynamoDB.